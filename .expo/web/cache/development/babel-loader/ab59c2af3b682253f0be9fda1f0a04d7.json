{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blarg\\\\Documents\\\\stardle\\\\Puzzle.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { View, TouchableOpacity, Text } from \"./components/Themed\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport HiddenText from \"react-native-web/dist/exports/TextInput\";\nvar mockdata = [\"Harry Potter and the Half-Blood Prince\", \"Daniel Radcliffe\", \"Rupert Grint\", \"Emma Watson\", \"Helena Bonham Carter\", \"Robbie Coltrane\", \"Warwick Davis\"];\nexport default function Puzzle() {\n  function keyHandler(key) {\n    console.log(key);\n  }\n\n  var inputRef = useRef(null);\n  useEffect(function () {\n    inputRef.current && inputRef.current.focus();\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }, React.createElement(HiddenText, {\n    ref: inputRef,\n    style: {\n      display: 'none'\n    },\n    onChange: function onChange(e) {\n      return keyHandler(4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return keyHandler(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Q\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return keyHandler(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"W\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return keyHandler(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"E\")));\n}\nvar styles = StyleSheet.create({\n  text: {\n    margin: 5\n  },\n  container: {\n    alignContent: 'center'\n  },\n  secretText: {}\n});","map":{"version":3,"sources":["C:/Users/blarg/Documents/stardle/Puzzle.tsx"],"names":["React","useEffect","useRef","View","TouchableOpacity","Text","mockdata","Puzzle","keyHandler","key","console","log","inputRef","current","focus","display","e","styles","text","StyleSheet","create","margin","container","alignContent","secretText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAA0BC,gBAA1B,EAA4CC,IAA5C;;;AAGA,IAAIC,QAAwB,GAAG,CAC3B,wCAD2B,EAE3B,kBAF2B,EAG3B,cAH2B,EAI3B,aAJ2B,EAK3B,sBAL2B,EAM3B,iBAN2B,EAO3B,eAP2B,CAA/B;AAYA,eAAe,SAASC,MAAT,GAAmB;AAC9B,WAASC,UAAT,CAAoBC,GAApB,EAAgC;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;;AAED,MAAMG,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,QAAQ,CAACC,OAAT,IAAoBD,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,EAApB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEF,QAAjB;AAA2B,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAC;AAAT,KAAlC;AAAoD,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOR,UAAU,CAAC,CAAD,CAAjB;AAAA,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAGH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAAC,CAAD,CAAhB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CAHG,EAMH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CANG,EASH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CATG,CAAP;AAaH;AAED,IAAMS,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,IAAI,EAAE;AACFG,IAAAA,MAAM,EAAE;AADN,GADuB;AAI7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE;AADP,GAJkB;AAO7BC,EAAAA,UAAU,EAAE;AAPiB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { View, TextInput, TouchableOpacity, Text } from \"./components/Themed\"\r\nimport { StyleSheet, TextInput as HiddenText } from 'react-native'\r\n\r\nlet mockdata : Array<String> = [\r\n    \"Harry Potter and the Half-Blood Prince\",\r\n    \"Daniel Radcliffe\",\r\n    \"Rupert Grint\",\r\n    \"Emma Watson\",\r\n    \"Helena Bonham Carter\",\r\n    \"Robbie Coltrane\",\r\n    \"Warwick Davis\"\r\n]\r\n\r\n\r\n\r\nexport default function Puzzle () {\r\n    function keyHandler(key: number){\r\n        console.log(key)\r\n    }\r\n\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n        inputRef.current && inputRef.current.focus();\r\n    }, []);\r\n\r\n    return <View>\r\n        <HiddenText ref={inputRef} style={{display:'none'}} onChange={(e) => keyHandler(4)}></HiddenText>\r\n        <View style={styles.text}></View>\r\n        <TouchableOpacity onPress={() => keyHandler(1)}>\r\n            <Text>Q</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => keyHandler(2)}>\r\n            <Text>W</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => keyHandler(3)}>\r\n            <Text>E</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        margin: 5,\r\n    },\r\n    container: {\r\n        alignContent: 'center'\r\n    },\r\n    secretText: {\r\n        \r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}