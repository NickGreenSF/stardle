{"version":3,"sources":["constants/Data.tsx","constants/Order.tsx","constants/PointlessWords.tsx","App.tsx","index.js"],"names":["Data","Order","PointlessWords","Set","ReactGA","initialize","filmdata","Object","keys","sort","width","window","innerWidth","height","innerHeight","relevantWidth","relevantGraphWidth","relevantPadding","spotHeight","today","Date","date","getMonth","getDate","getFullYear","tomorrow","setDate","setHours","firstDay","fromFirst","Math","floor","getTime","flipInAnimation","keyframes","flipInX","fadeInRightAnimation","fadeInRight","Puzzle","styled","div","HoverButton","button","HoverText","span","Hider","TopLevel","Input","input","AboveInput","Spot","Actor","MyNavbar","NavbarText","Logo","StatTitle","Stat","ModalLogo","RulesText","RulesAboveInput","hoverLocations","top","dataCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","getCookie","length","encodeURIComponent","timeLeft","outsideData","split","outsideRules","join","initialVisible","todaySolved","i","outsideMaxAttempts","max","parseInt","outsidePlayed","outsideWon","outsideStreak","outsideMaxStreak","App","useEffect","pageview","location","href","useState","secondsLeft","setSecondsLeft","minutesLeft","setMinutesLeft","hoursLeft","setHoursLeft","getstrTimeLeft","time","timer","setTimeout","clearTimeout","peekGuessStyles","peekBools","peekGuessSpans","peekHoverSpans","peekHoverDisplays","peekCurHoverLocations","holdoverdata","correct","maxAttempts","setMaxAttempts","played","setPlayed","streak","setStreak","maxStreak","setMaxStreak","successRate","setSuccessRate","data","solved","setSolved","active","setActive","rulesVisible","setRulesVisible","statsVisible","setStatsVisible","aboutVisible","setAboutVisible","darkMode","setDarkMode","body","classList","add","bools","setBools","green","backgroundColor","borderRadius","paddingTop","yellow","gray","blank","none","display","yellowCheck","ourGuess","strGuess","correctSans","wordsGuess","wordset","flag","forEach","item","has","setOlddiv","actors","setActors","guessSpans","setGuessSpans","call","undefined","guessStyles","setGuessStyles","hoverSpans","setHoverSpans","hoverDisplays","setHoverDisplays","curHoverLocations","setCurHoverLocations","textHandler","pretext","column","text","newData","includes","toLowerCase","push","min","guess","box","section","toString","peekactors","curTimeLeft","curWord","Modal","show","onHide","ModalBody","className","style","margin","fontSize","textAlign","cursor","onClick","marginLeft","marginRight","animation","fontWeight","toUpperCase","gridTemplateColumns","marginBottom","trunc","marginTop","left","remove","console","log","onChange","e","target","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"kQAmtDeA,EAnsDG,CAChB,+DAAgE,CAC9D,kEACA,gBACA,cACA,iBACA,mBACA,kBACA,mBAEF,oBAAqB,CACnB,oBACA,gBACA,cACA,eACA,iBACA,iBACA,cAEF,YAAa,CACX,YACA,cACA,qBACA,eACA,aACA,cACA,eAEF,WAAc,CACZ,aACA,yBACA,oBACA,qBACA,kBACA,aACA,eAEF,mBAAoB,CAClB,qBACA,cACA,mBACA,aACA,eACA,iBACA,aAEF,oCAAqC,CACnC,oCACA,WACA,kBACA,uBACA,cACA,mBACA,eAEF,gBAAiB,CACf,gBACA,iBACA,cACA,eACA,cACA,gBACA,kBAEF,MAAS,CACP,QACA,eACA,kBACA,iBACA,cACA,aACA,cAEF,2CAA4C,CAC1C,6CACA,gBACA,iBACA,aACA,kBACA,gBACA,eAEF,oBAAqB,CACnB,oBACA,YACA,eACA,gBACA,eACA,gBACA,aAEF,uBAAwB,CACtB,wBACA,cACA,sBACA,gBACA,cACA,iBACA,cAEF,gBAAiB,CACf,gBACA,aACA,qBACA,qBACA,iBACA,YACA,gBAEF,sBAAuB,CACrB,sBACA,aACA,oBACA,iBACA,gBACA,eACA,eAEF,KAAQ,CACN,OACA,eACA,gBACA,sBACA,cACA,cACA,eAEF,uBAAwB,CACtB,wBACA,iBACA,cACA,kBACA,eACA,cACA,gBAEF,0BAA2B,CACzB,0BACA,uBACA,WACA,oBACA,yBACA,cACA,cAEF,mBAAoB,CAClB,mBACA,gBACA,kBACA,eACA,gBACA,gBACA,iBAEF,aAAc,CACZ,aACA,eACA,gBACA,eACA,kBACA,iBACA,eAEF,yCAA0C,CACxC,2CACA,gBACA,aACA,kBACA,gBACA,gBACA,eAEF,eAAgB,CACd,eACA,gBACA,eACA,sBACA,eACA,gBACA,iBAEF,kBAAmB,CACjB,kBACA,cACA,gBACA,mBACA,eACA,eACA,cAEF,aAAgB,CACd,eACA,aACA,eACA,eACA,YACA,eACA,gBAEF,YAAe,CACb,cACA,eACA,gBACA,mBACA,WACA,aACA,iBAEF,cAAe,CACb,cACA,mBACA,gBACA,aACA,gBACA,cACA,cAEF,qBAAsB,CACpB,qBACA,gBACA,cACA,iBACA,mBACA,eACA,oBAEF,oCAAqC,CACnC,qCACA,YACA,eACA,aACA,eACA,gBACA,gBAEF,IAAO,CACL,MACA,kBACA,eACA,mBACA,cACA,eACA,iBAEF,kBAAmB,CACjB,kBACA,oBACA,gBACA,cACA,eACA,gBACA,kBAEF,qDAAsD,CACpD,qDACA,eACA,YACA,eACA,cACA,iBACA,iBAEF,gBAAiB,CACf,gBACA,cACA,WACA,aACA,iBACA,iBACA,cAEF,QAAW,CACT,UACA,gBACA,iBACA,eACA,gBACA,kBACA,cAEF,aAAc,CACZ,aACA,cACA,iBACA,gBACA,qBACA,kBACA,gBAEF,6BAA8B,CAC5B,8BACA,aACA,oBACA,qBACA,kBACA,aACA,eAEF,oBAAqB,CACnB,oBACA,kBACA,iBACA,qBACA,kBACA,iBACA,gBAEF,SAAU,CACR,SACA,oBACA,YACA,eACA,cACA,gBACA,aAEF,0CAA2C,CACzC,2CACA,cACA,iBACA,qBACA,aACA,kBACA,mBAEF,OAAU,CACR,SACA,cACA,qBACA,mBACA,eACA,cACA,mBAEF,gCAAiC,CAC/B,iCACA,sBACA,gBACA,aACA,cACA,iBACA,cAEF,qCAAsC,CACpC,sCACA,gBACA,eACA,eACA,eACA,YACA,gBAEF,KAAQ,CACN,OACA,eACA,kBACA,eACA,cACA,mBACA,eAEF,GAAM,CACJ,KACA,oBACA,eACA,eACA,eACA,sBACA,YAEF,oBAAqB,CACnB,8BACA,gBACA,mBACA,gBACA,iBACA,mBACA,mBAEF,kBAAmB,CACjB,yBACA,eACA,eACA,iBACA,cACA,WACA,qBAEF,0CAA2C,CACzC,6CACA,mBACA,qBACA,gBACA,gBACA,gBACA,eAEF,8CAA+C,CAC7C,iDACA,mBACA,WACA,qBACA,gBACA,gBACA,eAEF,kCAAmC,CACjC,qCACA,mBACA,eACA,gBACA,gBACA,gBACA,eAEF,oBAAqB,CACnB,kBACA,mBACA,uBACA,uBACA,eACA,gBACA,aAEF,eAAgB,CACd,eACA,aACA,iBACA,gBACA,oBACA,WACA,kBAEF,cAAe,CACb,cACA,cACA,cACA,aACA,cACA,YACA,aAEF,sBAAuB,CACrB,6BACA,aACA,iBACA,gBACA,uBACA,iBACA,eAEF,UAAa,CACX,YACA,aACA,eACA,YACA,cACA,uBACA,qBAEF,sBAAuB,CACrB,sBACA,WACA,aACA,mBACA,eACA,eACA,cAEF,mBAAoB,CAClB,6BACA,kBACA,mBACA,kBACA,iBACA,mBACA,mBAEF,aAAc,CACZ,aACA,gBACA,eACA,qBACA,cACA,kBACA,qBAEF,QAAW,CACT,UACA,iBACA,cACA,eACA,eACA,eACA,eAEF,gBAAiB,CACf,gBACA,cACA,mBACA,eACA,gBACA,cACA,gBAEF,2BAA4B,CAC1B,2BACA,aACA,2BACA,iBACA,gBACA,kBACA,gBAEF,gCAAiC,CAC/B,iCACA,4BACA,eACA,gBACA,eACA,eACA,gBAEF,6CAA8C,CAC5C,8CACA,iBACA,gBACA,gBACA,cACA,mBACA,eAEF,gCAAiC,CAC/B,4CACA,gBACA,mBACA,kBACA,iBACA,mBACA,mBAEF,oCAAqC,CACnC,uCACA,mBACA,kBACA,eACA,aACA,gBACA,cAEF,kBAAmB,CACjB,kBACA,WACA,aACA,gBACA,cACA,iBACA,cAEF,YAAa,CACX,YACA,eACA,2BACA,gBACA,mBACA,cACA,cAEF,uBAAwB,CACtB,uBACA,aACA,cACA,YACA,oBACA,WACA,kBAEF,aAAc,CACZ,aACA,eACA,gBACA,aACA,mBACA,sBACA,eAEF,SAAU,CACR,SACA,eACA,gBACA,iBACA,gBACA,cACA,uBAEF,eAAgB,CACd,eACA,iBACA,qBACA,kBACA,eACA,cACA,qBAEF,QAAW,CACT,UACA,yBACA,gBACA,gBACA,gBACA,aACA,gBAEF,wBAAyB,CACvB,wBACA,mBACA,YACA,gBACA,cACA,gBACA,kBAEF,mCAAoC,CAClC,oCACA,WACA,eACA,YACA,mBACA,eACA,kBAEF,4BAA6B,CAC3B,6BACA,QACA,YACA,sBACA,cACA,iBACA,cAEF,gCAAiC,CAC/B,4CACA,mBACA,gBACA,gBACA,iBACA,mBACA,mBAEF,yBAA0B,CACxB,yBACA,cACA,iBACA,cACA,aACA,aACA,mBAEF,mCAAoC,CAClC,qCACA,mBACA,oBACA,qBACA,kBACA,aACA,eAEF,mBAAoB,CAClB,mBACA,cACA,kBACA,kBACA,iBACA,kBACA,qBAEF,iBAAkB,CAChB,iBACA,YACA,gBACA,kBACA,cACA,kBACA,cAEF,0BAA2B,CACzB,2BACA,gBACA,gBACA,gBACA,YACA,WACA,qBAEF,sBAAuB,CACrB,uBACA,aACA,uBACA,kBACA,iBACA,kBACA,mBAEF,eAAgB,CACd,eACA,qBACA,aACA,gBACA,kBACA,YACA,gBAEF,QAAW,CACT,UACA,iBACA,iBACA,YACA,mBACA,iBACA,cAEF,sBAAuB,CACrB,sBACA,cACA,cACA,aACA,gBACA,eACA,iBAEF,qBAAsB,CACpB,mBACA,oBACA,gBACA,qBACA,iBACA,cACA,cAEF,iCAAkC,CAChC,kCACA,gBACA,kBACA,kBACA,iBACA,kBACA,qBAEF,qCAAsC,CACpC,sCACA,aACA,mBACA,uBACA,mBACA,eACA,kBAEF,kBAAmB,CACjB,kBACA,eACA,gBACA,mBACA,iBACA,eACA,gBAEF,aAAc,CACZ,aACA,eACA,aACA,eACA,cACA,kBACA,qBAEF,OAAU,CACR,SACA,aACA,kBACA,WACA,iBACA,eACA,gBAEF,aAAc,CACZ,aACA,mBACA,cACA,YACA,gBACA,cACA,eAEF,4BAA6B,CAC3B,6BACA,oBACA,eACA,qBACA,kBACA,eACA,gBAEF,WAAc,CACZ,aACA,cACA,kBACA,YACA,iBACA,eACA,kBAEF,iCAAkC,CAChC,kCACA,eACA,iBACA,gBACA,gBACA,eACA,gBAEF,2CAA4C,CAC1C,4CACA,aACA,mBACA,gBACA,mBACA,eACA,kBAEF,iBAAkB,CAChB,iBACA,cACA,gBACA,cACA,kBACA,eACA,eAEF,qCAAsC,CACpC,sCACA,eACA,iBACA,iBACA,iBACA,qBACA,eAEF,0BAA2B,CACzB,0BACA,WACA,iBACA,aACA,gBACA,iBACA,eAEF,mCAAoC,CAClC,uCACA,iBACA,kBACA,kBACA,iBACA,kBACA,qBAEF,kBAAmB,CACjB,kBACA,sBACA,gBACA,gBACA,cACA,gBACA,kBAEF,QAAW,CACT,UACA,gBACA,gBACA,cACA,iBACA,kBACA,gBAEF,WAAc,CACZ,aACA,uBACA,eACA,uBACA,iBACA,iBACA,cAEF,cAAe,CACb,cACA,YACA,kBACA,eACA,eACA,mBACA,cAEF,mCAAoC,CAClC,uCACA,iBACA,kBACA,kBACA,iBACA,kBACA,qBAEF,QAAW,CACT,UACA,iBACA,WACA,iBACA,iBACA,eACA,iBAEF,YAAa,CACX,YACA,2BACA,gBACA,qBACA,iBACA,cACA,cAEF,aAAc,CACZ,aACA,eACA,cACA,aACA,eACA,gBACA,eAEF,yBAA0B,CACxB,0BACA,eACA,qBACA,cACA,eACA,kBACA,qBAEF,iBAAkB,CAChB,iBACA,UACA,gBACA,cACA,oBACA,sBACA,eAEF,KAAQ,CACN,OACA,gBACA,iBACA,qBACA,kBACA,oBACA,uBAEF,gBAAiB,CACf,gBACA,gBACA,eACA,kBACA,gBACA,aACA,cAEF,oCAAqC,CACnC,qCACA,qBACA,aACA,kBACA,YACA,cACA,gBAEF,SAAY,CACV,WACA,cACA,gBACA,cACA,aACA,gBACA,oBAEF,SAAY,CACV,WACA,qBACA,cACA,YACA,YACA,kBACA,iBAEF,kBAAmB,CACjB,kBACA,aACA,qBACA,iBACA,aACA,eACA,eAEF,0BAA2B,CACzB,0BACA,YACA,cACA,cACA,aACA,mBACA,YAEF,4BAA6B,CAC3B,6BACA,cACA,iBACA,iBACA,qBACA,oBACA,eAEF,eAAgB,CACd,eACA,aACA,gBACA,aACA,iBACA,gBACA,mBAEF,YAAa,CACX,YACA,aACA,iBACA,aACA,iBACA,aACA,kBAEF,iBAAkB,CAChB,iBACA,cACA,cACA,YACA,YACA,cACA,gBAEF,kBAAmB,CACjB,kBACA,eACA,mBACA,gBACA,cACA,eACA,gBAEF,gBAAiB,CACf,iBACA,iBACA,gBACA,aACA,iBACA,iBACA,mBAEF,GAAM,CACJ,KACA,cACA,gBACA,gBACA,oBACA,mBACA,qBAEF,wBAAyB,CACvB,yBACA,oBACA,eACA,UACA,gBACA,iBACA,eAEF,gCAAiC,CAC/B,iCACA,eACA,iBACA,aACA,gBACA,iBACA,eAEF,gCAAiC,CAC/B,iCACA,kBACA,aACA,eACA,aACA,aACA,kBAEF,eAAgB,CACd,eACA,iBACA,gBACA,eACA,eACA,cACA,aAEF,8BAA+B,CAC7B,8BACA,gBACA,cACA,WACA,aACA,cACA,eAEF,gBAAiB,CACf,gBACA,iBACA,iBACA,eACA,iBACA,oBACA,oBAEF,wBAAyB,CACvB,yBACA,uBACA,qBACA,cACA,eACA,kBACA,qBAEF,gBAAiB,CACf,gBACA,oBACA,aACA,qBACA,eACA,eACA,mBAEF,gCAAiC,CAC/B,iCACA,iBACA,kBACA,gBACA,aACA,sBACA,eAEF,QAAW,CACT,UACA,wBACA,iBACA,iBACA,eACA,cACA,eAEF,aAAc,CACZ,aACA,cACA,cACA,kBACA,kBACA,cACA,iBAEF,aAAc,CACZ,aACA,oBACA,kBACA,iBACA,gBACA,gBACA,wBAEF,6BAA8B,CAC5B,gCACA,cACA,mBACA,aACA,cACA,eACA,cAEF,uBAAwB,CACtB,uBACA,kBACA,qBACA,oBACA,kBACA,mBACA,aAEF,oBAAqB,CACnB,oBACA,eACA,eACA,YACA,aACA,eACA,cAEF,mBAAoB,CAClB,oBACA,cACA,cACA,kBACA,eACA,cACA,qBAEF,uBAAwB,CACtB,uBACA,YACA,gBACA,gBACA,mBACA,aACA,iBAEF,YAAa,CACX,YACA,oBACA,kBACA,iBACA,WACA,eACA,gBAEF,cAAe,CACb,cACA,eACA,qBACA,YACA,cACA,YACA,aAEF,iBAAkB,CAChB,iBACA,gBACA,WACA,iBACA,iBACA,oBACA,eAEF,2BAA4B,CAC1B,4BACA,cACA,iBACA,kBACA,UACA,oBACA,eAEF,QAAW,CACT,UACA,eACA,iBACA,iBACA,cACA,eACA,cAEF,MAAS,CACP,QACA,gBACA,eACA,iBACA,cACA,iBACA,mBAEF,yBAA0B,CACxB,0BACA,YACA,aACA,eACA,aACA,aACA,kBAEF,oBAAqB,CACnB,oBACA,iBACA,mBACA,kBACA,iBACA,kBACA,cAEF,qBAAsB,CACpB,qBACA,aACA,mBACA,eACA,gBACA,aACA,gBAEF,gBAAiB,CACf,gBACA,gBACA,gBACA,cACA,sBACA,0BACA,iBAEF,SAAY,CACV,WACA,kBACA,kBACA,YACA,aACA,gBACA,qBAEF,oBAAqB,CACnB,oBACA,iBACA,eACA,aACA,cACA,uBACA,kBAEF,uBAAwB,CACtB,uBACA,mBACA,eACA,WACA,cACA,UACA,iBAEF,OAAU,CACR,SACA,gBACA,kBACA,kBACA,sBACA,cACA,eAEF,uBAAwB,CACtB,wBACA,cACA,iBACA,mBACA,gBACA,aACA,gBAEF,MAAS,CACP,QACA,kBACA,gBACA,iBACA,oBACA,mBACA,yBAEF,oBAAqB,CACnB,oBACA,iBACA,eACA,eACA,eACA,aACA,aAEF,6BAA8B,CAC5B,8BACA,kBACA,iBACA,aACA,gBACA,oBACA,aAEF,cAAe,CACb,cACA,eACA,iBACA,eACA,gBACA,gBACA,sBAEF,GAAM,CACJ,KACA,oBACA,YACA,2BACA,gBACA,qBACA,cAEF,SAAY,CACV,WACA,iBACA,oBACA,aACA,kBACA,iBACA,cAEF,iBAAkB,CAChB,iBACA,gBACA,eACA,gBACA,aACA,cACA,gBAEF,SAAU,CACR,SACA,aACA,kBACA,gBACA,qBACA,oBACA,uBAEF,wBAAyB,CACvB,wBACA,iBACA,iBACA,YACA,qBACA,iBACA,eAEF,yBAA0B,CACxB,0BACA,cACA,cACA,YACA,gBACA,gBACA,eAEF,OAAU,CACR,SACA,gBACA,aACA,kBACA,iBACA,gBACA,iBAEF,UAAa,CACX,YACA,cACA,iBACA,aACA,mBACA,gBACA,eAEF,aAAc,CACZ,aACA,gBACA,cACA,YACA,iBACA,cACA,oBAEF,oBAAqB,CACnB,oBACA,YACA,cACA,eACA,gBACA,oBACA,iBAEF,QAAS,CACP,QACA,cACA,gBACA,gBACA,eACA,kBACA,gBAEF,oBAAqB,CACnB,oBACA,mBACA,iBACA,cACA,aACA,gBACA,kBAEF,mBAAoB,CAClB,mBACA,cACA,gBACA,YACA,gBACA,cACA,kBAEF,iCAAkC,CAChC,iCACA,gBACA,aACA,gBACA,iBACA,qBACA,cAEF,SAAY,CACV,WACA,mBACA,oBACA,cACA,cACA,gBACA,gBAEF,kBAAmB,CACjB,kBACA,eACA,iBACA,YACA,eACA,aACA,cAEF,YAAa,CACX,YACA,eACA,aACA,aACA,cACA,aACA,aAEF,UAAa,CACX,YACA,iBACA,iBACA,eACA,iBACA,kBACA,iBAEF,uBAAwB,CACtB,uBACA,kBACA,cACA,mBACA,iBACA,gBACA,cAEF,yCAA0C,CACxC,yCACA,iBACA,gBACA,gBACA,cACA,eACA,oBAEF,WAAY,CACV,WACA,eACA,kBACA,aACA,eACA,kBACA,qBAEF,8CAA+C,CAC7C,8CACA,iBACA,gBACA,eACA,cACA,eACA,oBAEF,8CAA+C,CAC7C,8CACA,iBACA,gBACA,aACA,cACA,eACA,oBAEF,4CAA6C,CAC3C,4CACA,iBACA,gBACA,kBACA,cACA,eACA,oBAEF,sCAAuC,CACrC,sCACA,iBACA,gBACA,mBACA,cACA,eACA,oBAEF,2CAA4C,CAC1C,2CACA,iBACA,cACA,gBACA,cACA,eACA,oBAEF,0CAA2C,CACzC,0CACA,iBACA,oBACA,kBACA,cACA,eACA,oBAEF,uCAAwC,CACtC,wCACA,iBACA,kBACA,WACA,cACA,eACA,oBAEF,yBAA0B,CACxB,0BACA,gBACA,eACA,aACA,uBACA,UACA,eAEF,0CAA2C,CACzC,0CACA,kBACA,aACA,qBACA,gBACA,gBACA,eAEF,4CAA6C,CAC3C,6CACA,kBACA,kBACA,oBACA,mBACA,gBACA,sBAEF,4CAA6C,CAC3C,6CACA,kBACA,kBACA,oBACA,gBACA,gBACA,sBAEF,0CA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","file":"static/js/main.d9f4a012.chunk.js","sourcesContent":["// Years done: 2000, first 3 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005\r\n\r\n// \"\" : [\r\n//     \"\",\r\n//     \"\",\r\n//     \"\",\r\n//     \"\",\r\n//     \"\",\r\n//     \"\",\r\n//     \"\"\r\n// ],\r\n\r\ninterface Map {\r\n  [key: string]: Array<string>;\r\n}\r\n\r\nconst Data: Map = {\r\n  'the chronicles of narnia the lion the witch and the wardrobe': [\r\n    'The Chronicles of Narnia: The Lion, the Witch, and the Wardrobe',\r\n    'Tilda Swinton',\r\n    'Liam Neeson',\r\n    'Georgie Henley',\r\n    'Sophie Winkleman',\r\n    'Anna Popplewell',\r\n    'William Moseley',\r\n  ],\r\n  'war of the worlds': [\r\n    'War of the Worlds',\r\n    'Rick Gonzalez',\r\n    'Tim Robbins',\r\n    'Miranda Otto',\r\n    'Justin Chatwin',\r\n    'Dakota Fanning',\r\n    'Tom Cruise',\r\n  ],\r\n  'king kong': [\r\n    'King Kong',\r\n    'Colin Hanks',\r\n    'Thomas Kretschmann',\r\n    'Adrien Brody',\r\n    'Jack Black',\r\n    'Naomi Watts',\r\n    'Andy Serkis',\r\n  ],\r\n  'madagascar': [\r\n    'Madagascar',\r\n    'Cedric the Entertainer',\r\n    'Sacha Baron Cohen',\r\n    'Jada Pinkett Smith',\r\n    'David Schwimmer',\r\n    'Chris Rock',\r\n    'Ben Stiller',\r\n  ],\r\n  'mr and mrs smith': [\r\n    'Mr. and Mrs. Smith',\r\n    'Keith David',\r\n    'Kerry Washington',\r\n    'Adam Brody',\r\n    'Vince Vaughn',\r\n    'Angelina Jolie',\r\n    'Brad Pitt',\r\n  ],\r\n  'charlie and the chocolate factory': [\r\n    'Charlie and the Chocolate Factory',\r\n    'Deep Roy',\r\n    'AnnaSophia Robb',\r\n    'Helena Bonham Carter',\r\n    'David Kelly',\r\n    'Freddie Highmore',\r\n    'Johnny Depp',\r\n  ],\r\n  'batman begins': [\r\n    'Batman Begins',\r\n    'Cillian Murphy',\r\n    'Gary Oldman',\r\n    'Katie Holmes',\r\n    'Liam Neeson',\r\n    'Michael Caine',\r\n    'Christian Bale',\r\n  ],\r\n  'hitch': [\r\n    'Hitch',\r\n    'Philip Bosco',\r\n    'Julie Ann Emery',\r\n    'Amber Valletta',\r\n    'Kevin James',\r\n    'Eva Mendes',\r\n    'Will Smith',\r\n  ],\r\n  'pirates of the caribbean dead mans chest': [\r\n    \"Pirates of the Caribbean: Dead Man's Chest\",\r\n    'Tom Hollander',\r\n    'Jack Davenport',\r\n    'Bill Nighy',\r\n    'Keira Knightley',\r\n    'Orlando Bloom',\r\n    'Johnny Depp',\r\n  ],\r\n  'the da vinci code': [\r\n    'The Da Vinci Code',\r\n    'Jean Reno',\r\n    'Paul Bettany',\r\n    'Alfred Molina',\r\n    'Ian McKellen',\r\n    'Audrey Tautou',\r\n    'Tom Hanks',\r\n  ],\r\n  'ice age the meltdown': [\r\n    'Ice Age: The Meltdown',\r\n    'Will Arnett',\r\n    'Seann William Scott',\r\n    'Queen Latifah',\r\n    'Denis Leary',\r\n    'John Leguizamo',\r\n    'Ray Romano',\r\n  ],\r\n  'casino royale': [\r\n    'Casino Royale',\r\n    'Judi Dench',\r\n    'Jesper Christensen',\r\n    'Giancarlo Giannini',\r\n    'Mads Mikkelsen',\r\n    'Eva Green',\r\n    'Daniel Craig',\r\n  ],\r\n  'night at the museum': [\r\n    'Night at the Museum',\r\n    'Rami Malek',\r\n    'Patrick Gallagher',\r\n    'Robin Williams',\r\n    'Dick Van Dyke',\r\n    'Carla Gugino',\r\n    'Ben Stiller',\r\n  ],\r\n  'cars': [\r\n    'Cars',\r\n    'Cheech Marin',\r\n    'Tony Shalhoub',\r\n    'Larry the Cable Guy',\r\n    'Bonnie Hunt',\r\n    'Paul Newman',\r\n    'Owen Wilson',\r\n  ],\r\n  'x-men the last stand': [\r\n    'X-Men: The Last Stand',\r\n    'Kelsey Grammer',\r\n    'Anna Paquin',\r\n    'Patrick Stewart',\r\n    'Ian McKellen',\r\n    'Halle Berry',\r\n    'Hugh Jackman',\r\n  ],\r\n  'mission: impossible iii': [\r\n    'Mission: Impossible III',\r\n    'Jonathan Rhys Meyers',\r\n    'Maggie Q',\r\n    'Michelle Monaghan',\r\n    'Philip Seymour Hoffman',\r\n    'Ving Rhames',\r\n    'Tom Cruise',\r\n  ],\r\n  'superman returns': [\r\n    'Superman Returns',\r\n    'Marlon Brando',\r\n    'Eva Marie Saint',\r\n    'Kevin Spacey',\r\n    'James Marsden',\r\n    'Kate Bosworth',\r\n    'Brandon Routh',\r\n  ],\r\n  'happy feet': [\r\n    'Happy Feet',\r\n    'Hugo Weaving',\r\n    'Nicole Kidman',\r\n    'Hugh Jackman',\r\n    'Brittany Murphy',\r\n    'Robin Williams',\r\n    'Elijah Wood',\r\n  ],\r\n  'pirates of the caribbean at worlds end': [\r\n    \"Pirates of the Caribbean: At World's End\",\r\n    'Tom Hollander',\r\n    'Bill Nighy',\r\n    'Keira Knightley',\r\n    'Orlando Bloom',\r\n    'Geoffrey Rush',\r\n    'Johnny Depp',\r\n  ],\r\n  'spider man 3': [\r\n    'Spider-Man 3',\r\n    'J. K. Simmons',\r\n    'Topher Grace',\r\n    'Thomas Haden Church',\r\n    'James Franco',\r\n    'Kirsten Dunst',\r\n    'Tobey Maguire',\r\n  ],\r\n  'shrek the third': [\r\n    'Shrek the Third',\r\n    'John Cleese',\r\n    'Julie Andrews',\r\n    'Antonio Banderas',\r\n    'Cameron Diaz',\r\n    'Eddie Murphy',\r\n    'Mike Myers',\r\n  ],\r\n  'transformers': [\r\n    'Transformers',\r\n    'Jon Voight',\r\n    'Hugo Weaving',\r\n    'Peter Cullen',\r\n    'Megan Fox',\r\n    'Josh Duhamel',\r\n    'Shia LaBeouf',\r\n  ],\r\n  'ratatouille': [\r\n    'Ratatouille',\r\n    'Brad Garrett',\r\n    \"Peter O'Toole\",\r\n    'Janeane Garofalo',\r\n    'Ian Holm',\r\n    'Lou Romano',\r\n    'Patton Oswalt',\r\n  ],\r\n  'i am legend': [\r\n    'I Am Legend',\r\n    'Salli Richardson',\r\n    'Emma Thompson',\r\n    'Dash Mihok',\r\n    'Charlie Tahan',\r\n    'Alice Braga',\r\n    'Will Smith',\r\n  ],\r\n  'the simpsons movie': [\r\n    'The Simpsons Movie',\r\n    'Harry Shearer',\r\n    'Hank Azaria',\r\n    'Yeardley Smith',\r\n    'Nancy Cartwright',\r\n    'Julie Kavner',\r\n    'Dan Castellaneta',\r\n  ],\r\n  'national treasure book of secrets': [\r\n    'National Treasure: Book of Secrets',\r\n    'Ed Harris',\r\n    'Helen Mirren',\r\n    'Jon Voight',\r\n    'Diane Kruger',\r\n    'Justin Bartha',\r\n    'Nicolas Cage',\r\n  ],\r\n  '300': [\r\n    '300',\r\n    'Rodrigo Santoro',\r\n    'Dominic West',\r\n    'Giovanni Cimmino',\r\n    'Lena Headey',\r\n    'David Wenham',\r\n    'Gerard Butler',\r\n  ],\r\n  'the dark knight': [\r\n    'The Dark Knight',\r\n    'Maggie Gyllenhaal',\r\n    'Aaron Eckhart',\r\n    'Gary Oldman',\r\n    'Heath Ledger',\r\n    'Michael Caine',\r\n    'Christian Bale',\r\n  ],\r\n  'indiana jones and the kingdom of the crystal skull': [\r\n    'Indiana Jones and the Kingdom of the Crystal Skull',\r\n    'Shia LaBeouf',\r\n    'John Hurt',\r\n    'Ray Winstone',\r\n    'Karen Allen',\r\n    'Cate Blanchett',\r\n    'Harrison Ford',\r\n  ],\r\n  'kung fu panda': [\r\n    'Kung Fu Panda',\r\n    'David Cross',\r\n    'Lucy Liu',\r\n    'Seth Rogen',\r\n    'Angelina Jolie',\r\n    'Dustin Hoffman',\r\n    'Jack Black',\r\n  ],\r\n  'hancock': [\r\n    'Hancock',\r\n    'Thomas Lennon',\r\n    'Johnny Galecki',\r\n    'Eddie Marsan',\r\n    'Jason Bateman',\r\n    'Charlize Theron',\r\n    'Will Smith',\r\n  ],\r\n  'mamma mia!': [\r\n    'Mamma Mia!',\r\n    'Colin Firth',\r\n    'Pierce Brosnan',\r\n    'Julie Walters',\r\n    'Christine Baranski',\r\n    'Amanda Seyfried',\r\n    'Meryl Streep',\r\n  ],\r\n  'madagascar escape 2 africa': [\r\n    'Madagascar: Escape 2 Africa',\r\n    'Bernie Mac',\r\n    'Sacha Baron Cohen',\r\n    'Jada Pinkett Smith',\r\n    'David Schwimmer',\r\n    'Chris Rock',\r\n    'Ben Stiller',\r\n  ],\r\n  'quantum of solace': [\r\n    'Quantum of Solace',\r\n    'Anatole Taubman',\r\n    'Gemma Arterton',\r\n    'Giancarlo Giannini',\r\n    'Mathieu Amatric',\r\n    'Olga Kurylenko',\r\n    'Daniel Craig',\r\n  ],\r\n  'wall-e': [\r\n    'WALL-E',\r\n    'John Ratzenberger',\r\n    'MacInTalk',\r\n    'Fred Willard',\r\n    'Jeff Garlin',\r\n    'Elissa Knight',\r\n    'Ben Burtt',\r\n  ],\r\n  'the chronicles of narnia prince caspian': [\r\n    'The Chronicles of Narnia: Prince Caspian',\r\n    'Liam Neeson',\r\n    'Peter Dinklage',\r\n    'Sergio Castellitto',\r\n    'Ben Barnes',\r\n    'Anna Popplewell',\r\n    'William Moseley',\r\n  ],\r\n  'avatar': [\r\n    'Avatar',\r\n    'CCH Pounder',\r\n    'Michelle Rodriguez',\r\n    'Sigourney Weaver',\r\n    'Stephen Lang',\r\n    'Zoe Saldana',\r\n    'Sam Worthington',\r\n  ],\r\n  'ice age dawn of the dinosaurs': [\r\n    'Ice Age: Dawn of the Dinosaurs',\r\n    'Seann William Scott',\r\n    'Queen Latifah',\r\n    'Simon Pegg',\r\n    'Denis Leary',\r\n    'John Leguizamo',\r\n    'Ray Romano',\r\n  ],\r\n  'transformers revenge of the fallen': [\r\n    'Transformers: Revenge of the Fallen',\r\n    'Tyrese Gibson',\r\n    'Josh Duhamel',\r\n    'Hugo Weaving',\r\n    'Peter Cullen',\r\n    'Megan Fox',\r\n    'Shia LaBeouf',\r\n  ],\r\n  '2012': [\r\n    '2012',\r\n    'Danny Glover',\r\n    'Thandiwe Newton',\r\n    'Oliver Platt',\r\n    'Amanda Peet',\r\n    'Chiwetel Ejiofor',\r\n    'John Cusack',\r\n  ],\r\n  'up': [\r\n    'Up',\r\n    'John Ratzenberger',\r\n    'Delroy Lindo',\r\n    'Bob Peterson',\r\n    'Jordan Nagal',\r\n    'Christopher Plummer',\r\n    'Ed Asner',\r\n  ],\r\n  'twilight new moon': [\r\n    'The Twilight Saga: New Moon',\r\n    'Graham Greene',\r\n    'Rachelle Lefevre',\r\n    'Ashley Greene',\r\n    'Taylor Lautner',\r\n    'Robert Pattinson',\r\n    'Kristen Stewart',\r\n  ],\r\n  'sherlock holmes': [\r\n    'Sherlock Holmes (2009)',\r\n    'Eddie Marsan',\r\n    'Kelly Reilly',\r\n    'Rachel McAdams',\r\n    'Mark Strong',\r\n    'Jude Law',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'star wars episode vi return of the jedi': [\r\n    'Star Wars: Episode VI - Return of the Jedi',\r\n    'James Earl Jones',\r\n    'Billy Dee Williams',\r\n    'Ian McDiarmid',\r\n    'Carrie Fisher',\r\n    'Harrison Ford',\r\n    'Mark Hamill',\r\n  ],\r\n  'star wars episode v the empire strikes back': [\r\n    'Star Wars: Episode V - The Empire Strikes Back',\r\n    'James Earl Jones',\r\n    'Frank Oz',\r\n    'Billy Dee Williams',\r\n    'Carrie Fisher',\r\n    'Harrison Ford',\r\n    'Mark Hamill',\r\n  ],\r\n  'star wars episode iv a new hope': [\r\n    'Star Wars: Episode IV - A New Hope',\r\n    'James Earl Jones',\r\n    'Alec Guiness',\r\n    'Peter Cushing',\r\n    'Carrie Fisher',\r\n    'Harrison Ford',\r\n    'Mark Hamill',\r\n  ],\r\n  'angels and demons': [\r\n    'Angels & Demons',\r\n    'Nikolaj Lie Kaas',\r\n    'Pierfrancesco Favino',\r\n    'Stellan Skarsgård',\r\n    'Ayelet Zurer',\r\n    'Ewan McGregor',\r\n    'Tom Hanks',\r\n  ],\r\n  'the hangover': [\r\n    'The Hangover',\r\n    'Mike Tyson',\r\n    'Heather Graham',\r\n    'Justin Bartha',\r\n    'Zack Galifianakis',\r\n    'Ed Helms',\r\n    'Bradley Cooper',\r\n  ],\r\n  'toy story 3': [\r\n    'Toy Story 3',\r\n    'Don Rickles',\r\n    'John Morris',\r\n    'Ned Beatty',\r\n    'Joan Cusack',\r\n    'Tim Allen',\r\n    'Tom Hanks',\r\n  ],\r\n  'alice in wonderland': [\r\n    'Alice in Wonderland (2010)',\r\n    'Matt Lucas',\r\n    'Crispin Glover',\r\n    'Anne Hathaway',\r\n    'Helena Bonham Carter',\r\n    'Mia Wasikowska',\r\n    'Johnny Depp',\r\n  ],\r\n  'inception': [\r\n    'Inception',\r\n    'Dileep Rao',\r\n    'Ken Watanabe',\r\n    'Tom Hardy',\r\n    'Elliot Page',\r\n    'Joseph Gordon-Levitt',\r\n    'Leonardo DiCaprio',\r\n  ],\r\n  'shrek forever after': [\r\n    'Shrek Forever After',\r\n    'Jon Hamm',\r\n    'Walt Dohrn',\r\n    'Antonio Banderas',\r\n    'Eddie Murphy',\r\n    'Cameron Diaz',\r\n    'Mike Myers',\r\n  ],\r\n  'twilight eclipse': [\r\n    'The Twilight Saga: Eclipse',\r\n    'Jodelle Ferland',\r\n    'Elizabeth Reaser',\r\n    'Peter Facinelli',\r\n    'Taylor Lautner',\r\n    'Robert Pattinson',\r\n    'Kristen Stewart',\r\n  ],\r\n  'iron man 2': [\r\n    'Iron Man 2',\r\n    'Mickey Rourke',\r\n    'Sam Rockwell',\r\n    'Scarlett Johansson',\r\n    'Don Cheadle',\r\n    'Gwyneth Paltrow',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'tangled': [\r\n    'Tangled',\r\n    'Jeffrey Tambor',\r\n    'Ron Perlman',\r\n    'Brad Garrett',\r\n    'Donna Murphy',\r\n    'Zachary Levi',\r\n    'Mandy Moore',\r\n  ],\r\n  'despicable me': [\r\n    'Despicable Me',\r\n    'Will Arnett',\r\n    'Miranda Cosgrove',\r\n    'Kristen Wiig',\r\n    'Russell Brand',\r\n    'Jason Segel',\r\n    'Steve Carell',\r\n  ],\r\n  'how to train your dragon': [\r\n    'How to Train Your Dragon',\r\n    'Jonah Hill',\r\n    'Christopher Mintz-Plasse',\r\n    'Craig Ferguson',\r\n    'Gerard Butler',\r\n    'America Ferrera',\r\n    'Jay Baruchel',\r\n  ],\r\n  'transformers dark of the moon': [\r\n    'Transformers: Dark of the Moon',\r\n    'Rosie Huntington-Whiteley',\r\n    'Josh Duhamel',\r\n    'Leonard Nimoy',\r\n    'Hugo Weaving',\r\n    'Peter Cullen',\r\n    'Shia LaBeouf',\r\n  ],\r\n  'pirates of the caribbean on stranger tides': [\r\n    'Pirates of the Caribbean: On Stranger Tides',\r\n    'Keith Richards',\r\n    'Kevin McNally',\r\n    'Geoffrey Rush',\r\n    'Ian McShane',\r\n    'Penélope Cruz',\r\n    'Johnny Depp',\r\n  ],\r\n  'twilight breaking dawn part 1': [\r\n    'The Twilight Saga: Breaking Dawn - Part 1',\r\n    'Tanaya Beatty',\r\n    'Elizabeth Reaser',\r\n    'Peter Facinelli',\r\n    'Taylor Lautner',\r\n    'Robert Pattinson',\r\n    'Kristen Stewart',\r\n  ],\r\n  'mission impossible ghost protocol': [\r\n    'Mission: Impossible - Ghost Protocol',\r\n    'Vladimir Mashkov',\r\n    'Michael Nyqvist',\r\n    'Paula Patton',\r\n    'Simon Pegg',\r\n    'Jeremy Renner',\r\n    'Tom Cruise',\r\n  ],\r\n  'kung fu panda 2': [\r\n    'Kung Fu Panda 2',\r\n    'Lucy Liu',\r\n    'Seth Rogen',\r\n    'Michelle Yeoh',\r\n    'Gary Oldman',\r\n    'Angelina Jolie',\r\n    'Jack Black',\r\n  ],\r\n  'fast five': [\r\n    'Fast Five',\r\n    'Matt Schulze',\r\n    'Chris \"Ludacris\" Bridges',\r\n    'Tyrese Gibson',\r\n    'Jordana Brewster',\r\n    'Paul Walker',\r\n    'Vin Diesel',\r\n  ],\r\n  'the hangover part ii': [\r\n    'The Hangover Part II',\r\n    'Mike Tyson',\r\n    'Jamie Chung',\r\n    'Ken Jeong',\r\n    'Zach Galifianakis',\r\n    'Ed Helms',\r\n    'Bradley Cooper',\r\n  ],\r\n  'the smurfs': [\r\n    'The Smurfs',\r\n    'Fred Armisen',\r\n    'Anton Yelchin',\r\n    'Katy Perry',\r\n    'Jonathan Winters',\r\n    'Neil Patrick Harris',\r\n    'Hank Azaria',\r\n  ],\r\n  'cars 2': [\r\n    'Cars 2',\r\n    'Eddie Izzard',\r\n    'John Turturro',\r\n    'Emily Mortimer',\r\n    'Michael Caine',\r\n    'Owen Wilson',\r\n    'Larry the Cable Guy',\r\n  ],\r\n  'the avengers': [\r\n    'The Avengers',\r\n    'Tom Hiddleston',\r\n    'Scarlett Johansson',\r\n    'Chris Hemsworth',\r\n    'Mark Ruffalo',\r\n    'Chris Evans',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'skyfall': [\r\n    'Skyfall',\r\n    'Bérénice Marlohe',\r\n    'Naomie Harris',\r\n    'Ralph Fiennes',\r\n    'Javier Bardem',\r\n    'Judi Dench',\r\n    'Daniel Craig',\r\n  ],\r\n  'the dark knight rises': [\r\n    'The Dark Knight Rises',\r\n    'Marion Cotillard',\r\n    'Tom Hardy',\r\n    'Anne Hathaway',\r\n    'Gary Oldman',\r\n    'Michael Caine',\r\n    'Christian Bale',\r\n  ],\r\n  'the hobbit an unexpected journey': [\r\n    'The Hobbit: An Unexpected Journey',\r\n    'Ian Holm',\r\n    'Hugo Weaving',\r\n    'Ken Stott',\r\n    'Richard Armitage',\r\n    'Ian McKellen',\r\n    'Martin Freeman',\r\n  ],\r\n  'ice age continental drift': [\r\n    'Ice Age: Continental Drift',\r\n    'Drake',\r\n    'Josh Peck',\r\n    'Seann William Scott',\r\n    'Denis Leary',\r\n    'John Leguizamo',\r\n    'Ray Romano',\r\n  ],\r\n  'twilight breaking dawn part 2': [\r\n    'The Twilight Saga: Breaking Dawn - Part 2',\r\n    'Jackson Rathbone',\r\n    'Ashley Greene',\r\n    'Mackenzie Foy',\r\n    'Taylor Lautner',\r\n    'Robert Pattinson',\r\n    'Kristen Stewart',\r\n  ],\r\n  'the amazing spider man': [\r\n    'The Amazing Spider-Man',\r\n    'Irrfan Khan',\r\n    'Campbell Scott',\r\n    'Denis Leary',\r\n    'Rhys Ifans',\r\n    'Emma Stone',\r\n    'Andrew Garfield',\r\n  ],\r\n  'madagascar 3 europes most wanted': [\r\n    \"Madagascar 3: Europe's Most Wanted\",\r\n    'Jessica Chastain',\r\n    'Frances McDormand',\r\n    'Jada Pinkett Smith',\r\n    'David Schwimmer',\r\n    'Chris Rock',\r\n    'Ben Stiller',\r\n  ],\r\n  'the hunger games': [\r\n    'The Hunger Games',\r\n    'Wes Bentley',\r\n    'Elizabeth Banks',\r\n    'Woody Harrelson',\r\n    'Liam Hemsworth',\r\n    'Josh Hutcherson',\r\n    'Jennifer Lawrence',\r\n  ],\r\n  'men in black 3': [\r\n    'Men in Black 3',\r\n    'Alice Eve',\r\n    'Emma Thompson',\r\n    'Jemaine Clement',\r\n    'Josh Brolin',\r\n    'Tommy Lee Jones',\r\n    'Will Smith',\r\n  ],\r\n  'ferris buellers day off': [\r\n    \"Ferris Bueller's Day Off\",\r\n    'Charlie Sheen',\r\n    'Jennifer Grey',\r\n    'Jeffrey Jones',\r\n    'Alan Ruck',\r\n    'Mia Sara',\r\n    'Matthew Broderick',\r\n  ],\r\n  'thor the dark world': [\r\n    'Thor: The Dark World',\r\n    'Idris Elba',\r\n    'Stellan Skarsgård',\r\n    'Anthony Hopkins',\r\n    'Tom Hiddleston',\r\n    'Natalie Portman',\r\n    'Chris Hemsworth',\r\n  ],\r\n  'man of steel': [\r\n    'Man of Steel',\r\n    'Laurence Fishburne',\r\n    'Diane Lane',\r\n    'Kevin Costner',\r\n    'Michael Shannon',\r\n    'Amy Adams',\r\n    'Henry Cavill',\r\n  ],\r\n  'gravity': [\r\n    'Gravity',\r\n    'Sandra Bullock',\r\n    'George Clooney',\r\n    'Ed Harris',\r\n    'Orto Ignatiussen',\r\n    'Phaldut Sharma',\r\n    'Amy Warren',\r\n  ],\r\n  'monsters university': [\r\n    'Monsters University',\r\n    'Charlie Day',\r\n    'Joel Murray',\r\n    'Peter Sohn',\r\n    'Steve Buscemi',\r\n    'John Goodman',\r\n    'Billy Crystal',\r\n  ],\r\n  'fast and furious 6': [\r\n    'Fast & Furious 6',\r\n    'Jordanna Brewster',\r\n    'Tyrese Gibson',\r\n    'Michelle Rodriguez',\r\n    'Dwayne Johnson',\r\n    'Paul Walker',\r\n    'Vin Diesel',\r\n  ],\r\n  'the hunger games catching fire': [\r\n    'The Hunger Games: Catching Fire',\r\n    'Lenny Kravitz',\r\n    'Elizabeth Banks',\r\n    'Woody Harrelson',\r\n    'Liam Hemsworth',\r\n    'Josh Hutcherson',\r\n    'Jennifer Lawrence',\r\n  ],\r\n  'the hobbit the desolation of smaug': [\r\n    'The Hobbit: The Desolation of Smaug',\r\n    'Luke Evans',\r\n    'Evangeline Lilly',\r\n    'Benedict Cumberbatch',\r\n    'Richard Armitage',\r\n    'Ian McKellen',\r\n    'Martin Freeman',\r\n  ],\r\n  'despicable me 2': [\r\n    'Despicable Me 2',\r\n    'Steve Coogan',\r\n    'Russell Brand',\r\n    'Miranda Cosgrove',\r\n    'Benjamin Bratt',\r\n    'Kristen Wiig',\r\n    'Steve Carell',\r\n  ],\r\n  'iron man 3': [\r\n    'Iron Man 3',\r\n    'Rebecca Hall',\r\n    'Guy Pearce',\r\n    'Ben Kingsley',\r\n    'Don Cheadle',\r\n    'Gwyneth Paltrow',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'frozen': [\r\n    'Frozen',\r\n    'Alan Tudyk',\r\n    'Santino Fontana',\r\n    'Josh Gad',\r\n    'Jonathan Groff',\r\n    'Idina Menzel',\r\n    'Kristen Bell',\r\n  ],\r\n  'big hero 6': [\r\n    'Big Hero 6',\r\n    'Damon Wayans Jr.',\r\n    'Jamie Chung',\r\n    'TJ Miller',\r\n    'Daniel Henney',\r\n    'Ryan Potter',\r\n    'Scott Adsit',\r\n  ],\r\n  'x men days of future past': [\r\n    'X-Men: Days of Future Past',\r\n    'Jennifer Lawrence',\r\n    'Ian McKellen',\r\n    'Michael Fassbender',\r\n    'Patrick Stewart',\r\n    'James McAvoy',\r\n    'Hugh Jackman',\r\n  ],\r\n  'maleficent': [\r\n    'Maleficent',\r\n    'Juno Temple',\r\n    'Imelda Staunton',\r\n    'Sam Riley',\r\n    'Sharlto Copley',\r\n    'Elle Fanning',\r\n    'Angelina Jolie',\r\n  ],\r\n  'transformers age of extinction': [\r\n    'Transformers: Age of Extinction',\r\n    'Nicola Peltz',\r\n    'Kelsey Grammer',\r\n    'Stanley Tucci',\r\n    'Mark Wahlberg',\r\n    'Frank Welker',\r\n    'Peter Cullen',\r\n  ],\r\n  'the hobbit the battle of the five armies': [\r\n    'The Hobbit: The Battle of the Five Armies',\r\n    'Luke Evans',\r\n    'Evangeline Lilly',\r\n    'Orlando Bloom',\r\n    'Richard Armitage',\r\n    'Ian McKellen',\r\n    'Martin Freeman',\r\n  ],\r\n  'the lego movie': [\r\n    'The Lego Movie',\r\n    'Alison Brie',\r\n    'Nick Offerman',\r\n    'Will Arnett',\r\n    'Elizabeth Banks',\r\n    'Will Ferrell',\r\n    'Chris Pratt',\r\n  ],\r\n  'captain america the winter soldier': [\r\n    'Captain America: The Winter Soldier',\r\n    'Frank Grillo',\r\n    'Cobie Smulders',\r\n    'Anthony Mackie',\r\n    'Sebastian Stan',\r\n    'Scarlett Johansson',\r\n    'Chris Evans',\r\n  ],\r\n  'guardians of the galaxy': [\r\n    'Guardians of the Galaxy',\r\n    'Lee Pace',\r\n    'Bradley Cooper',\r\n    'Vin Diesel',\r\n    'Dave Bautista',\r\n    'Zoe Saldaña',\r\n    'Chris Pratt',\r\n  ],\r\n  'the hunger games mockingjay pt 1': [\r\n    'The Hunger Games: Mockingjay - Pt. 1',\r\n    'Julianne Moore',\r\n    'Elizabeth Banks',\r\n    'Woody Harrelson',\r\n    'Liam Hemsworth',\r\n    'Josh Hutcherson',\r\n    'Jennifer Lawrence',\r\n  ],\r\n  'american sniper': [\r\n    'American Sniper',\r\n    'Kevin \"Dauber\" Lacz',\r\n    'Cory Hardrict',\r\n    'Jake McDorman',\r\n    'Luke Grimes',\r\n    'Sienna Miller',\r\n    'Bradley Cooper',\r\n  ],\r\n  'spectre': [\r\n    'Spectre',\r\n    'Dave Bautista',\r\n    'Naomie Harris',\r\n    'Ben Whishaw',\r\n    'Léa Seydoux',\r\n    'Christoph Waltz',\r\n    'Daniel Craig',\r\n  ],\r\n  'cinderella': [\r\n    'Cinderella',\r\n    'Stellan Skarsgård',\r\n    'Nonso Anozie',\r\n    'Helena Bonham Carter',\r\n    'Cate Blanchett',\r\n    'Richard Madden',\r\n    'Lily James',\r\n  ],\r\n  'the martian': [\r\n    'The Martian',\r\n    'Sean Bean',\r\n    'Michael Peña',\r\n    'Jeff Daniels',\r\n    'Kristen Wiig',\r\n    'Jessica Chastain',\r\n    'Matt Damon',\r\n  ],\r\n  'the hunger games mockingjay pt 2': [\r\n    'The Hunger Games: Mockingjay - Pt. 2',\r\n    'Julianne Moore',\r\n    'Elizabeth Banks',\r\n    'Woody Harrelson',\r\n    'Liam Hemsworth',\r\n    'Josh Hutcherson',\r\n    'Jennifer Lawrence',\r\n  ],\r\n  'minions': [\r\n    'Minions',\r\n    'Sandra Bullock',\r\n    'Jon Hamm',\r\n    'Michael Keaton',\r\n    'Allison Janney',\r\n    'Steve Coogan',\r\n    'Pierre Coffin',\r\n  ],\r\n  'furious 7': [\r\n    'Furious 7',\r\n    'Chris \"Ludacris\" Bridges',\r\n    'Tyrese Gibson',\r\n    'Michelle Rodriguez',\r\n    'Dwayne Johnson',\r\n    'Paul Walker',\r\n    'Vin Diesel',\r\n  ],\r\n  'inside out': [\r\n    'Inside Out',\r\n    'Mindy Kaling',\r\n    'Lewis Black',\r\n    'Bill Hader',\r\n    'Richard Kind',\r\n    'Phyllis Smith',\r\n    'Amy Poehler',\r\n  ],\r\n  'avengers age of ultron': [\r\n    'Avengers: Age of Ultron',\r\n    'James Spader',\r\n    'Scarlett Johansson',\r\n    'Chris Evans',\r\n    'Mark Ruffalo',\r\n    'Chris Hemsworth',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'jurassic world': [\r\n    'Jurassic World',\r\n    'Omar Sy',\r\n    'Nick Robinson',\r\n    'Ty Simpkins',\r\n    \"Vincent D'Onofrio\",\r\n    'Bryce Dallas Howard',\r\n    'Chris Pratt',\r\n  ],\r\n  'sing': [\r\n    'Sing',\r\n    'Taron Egerton',\r\n    'John C. Reilly',\r\n    'Scarlett Johansson',\r\n    'Seth MacFarlane',\r\n    'Reese Witherspoon',\r\n    'Matthew McConaughey',\r\n  ],\r\n  'suicide squad': [\r\n    'Suicide Squad',\r\n    'Jay Hernandez',\r\n    'Jai Courtney',\r\n    'Cara Delevingne',\r\n    'Margot Robbie',\r\n    'Jared Leto',\r\n    'Will Smith',\r\n  ],\r\n  'batman v superman dawn of justice': [\r\n    'Batman v Superman: Dawn of Justice',\r\n    'Laurence Fishburne',\r\n    'Diane Lane',\r\n    'Jesse Eisenberg',\r\n    'Amy Adams',\r\n    'Ben Affleck',\r\n    'Henry Cavill',\r\n  ],\r\n  'zootopia': [\r\n    'Zootopia',\r\n    'Bonnie Hunt',\r\n    'Nate Torrence',\r\n    'Jenny Slate',\r\n    'Idris Elba',\r\n    'Jason Bateman',\r\n    'Ginnifer Goodwin',\r\n  ],\r\n  'deadpool': [\r\n    'Deadpool',\r\n    'Brianna Hildebrand',\r\n    'Gina Carano',\r\n    'TJ Miller',\r\n    'Ed Skrein',\r\n    'Morena Baccarin',\r\n    'Ryan Reynolds',\r\n  ],\r\n  'the jungle book': [\r\n    'The Jungle Book',\r\n    'Neel Sethi',\r\n    'Scarlett Johansson',\r\n    \"Lupita Nyong'o\",\r\n    'Idris Elba',\r\n    'Ben Kingsley',\r\n    'Bill Murray',\r\n  ],\r\n  'the secret life of pets': [\r\n    'The Secret Life of Pets',\r\n    'Lake Bell',\r\n    'Elle Kemper',\r\n    'Jenny Slate',\r\n    'Kevin Hart',\r\n    'Eric Stonestreet',\r\n    'Louis CK',\r\n  ],\r\n  'captain america civil war': [\r\n    'Captain America: Civil War',\r\n    'Don Cheadle',\r\n    'Anthony Mackie',\r\n    'Sebastian Stan',\r\n    'Scarlett Johansson',\r\n    'Robert Downey Jr.',\r\n    'Chris Evans',\r\n  ],\r\n  'finding dory': [\r\n    'Finding Dory',\r\n    'Ty Burrell',\r\n    'Kaitlin Olson',\r\n    \"Ed O'Neill\",\r\n    'Hayden Rolence',\r\n    'Albert Brooks',\r\n    'Ellen DeGeneres',\r\n  ],\r\n  'rogue one': [\r\n    'Rogue One',\r\n    'Alan Tudyk',\r\n    'Mads Mikkelsen',\r\n    'Donnie Yen',\r\n    'Ben Mendelsohn',\r\n    'Diego Luna',\r\n    'Felicity Jones',\r\n  ],\r\n  'justice league': [\r\n    'Justice League',\r\n    'Jason Momoa',\r\n    'Ezra Miller',\r\n    'Gal Gadot',\r\n    'Amy Adams',\r\n    'Ben Affleck',\r\n    'Henry Cavill',\r\n  ],\r\n  'despicable me 3': [\r\n    'Despicable Me 3',\r\n    'Steve Coogan',\r\n    'Miranda Cosgrove',\r\n    'Pierre Coffin',\r\n    'Trey Parker',\r\n    'Kristen Wiig',\r\n    'Steve Carell',\r\n  ],\r\n  'thor ragnarok': [\r\n    'Thor: Ragnarok',\r\n    'Tessa Thompson',\r\n    'Jeff Goldblum',\r\n    'Idris Elba',\r\n    'Cate Blanchett',\r\n    'Tom Hiddleston',\r\n    'Chris Hemsworth',\r\n  ],\r\n  'it': [\r\n    'It',\r\n    'Wyatt Oleff',\r\n    'Finn Wolfhard',\r\n    'Sophia Lillis',\r\n    'Jeremy Ray Taylor',\r\n    'Jaeden Lieberher',\r\n    'Bill Skarsgård',\r\n  ],\r\n  'spider man homecoming': [\r\n    'Spider-Man: Homecoming',\r\n    'Robert Downey Jr.',\r\n    'Marisa Tomei',\r\n    'Zendaya',\r\n    'Donald Glover',\r\n    'Michael Keaton',\r\n    'Tom Holland',\r\n  ],\r\n  'guardians of the galaxy vol 2': [\r\n    'Guardians of the Galaxy Vol. 2',\r\n    'Kurt Russell',\r\n    'Bradley Cooper',\r\n    'Vin Diesel',\r\n    'Dave Bautista',\r\n    'Zoe Saldaña',\r\n    'Chris Pratt',\r\n  ],\r\n  'jumanji welcome to the jungle': [\r\n    'Jumanji: Welcome to the Jungle',\r\n    'Bobby Cannavale',\r\n    'Nick Jonas',\r\n    'Karen Gillan',\r\n    'Kevin Hart',\r\n    'Jack Black',\r\n    'Dwayne Johnson',\r\n  ],\r\n  'wonder woman': [\r\n    'Wonder Woman',\r\n    'Connie Nielsen',\r\n    'David Thewlis',\r\n    'Danny Huston',\r\n    'Robin Wright',\r\n    'Chris Evans',\r\n    'Gal Gadot',\r\n  ],\r\n  'beauty and the beast (2017)': [\r\n    'Beauty and the Beast (2017)',\r\n    'Ewan McGregor',\r\n    'Kevin Kline',\r\n    'Josh Gad',\r\n    'Luke Evans',\r\n    'Dan Stevens',\r\n    'Emma Watson',\r\n  ],\r\n  'black panther': [\r\n    'Black Panther',\r\n    'Daniel Kaluuya',\r\n    'Martin Freeman',\r\n    'Danai Gurira',\r\n    \"Lupita Nyong'o\",\r\n    'Michael B. Jordan',\r\n    'Chadwick Boseman',\r\n  ],\r\n  'avengers infinity war': [\r\n    'Avengers: Infinity War',\r\n    'Benedict Cumberbatch',\r\n    'Scarlett Johansson',\r\n    'Chris Evans',\r\n    'Mark Ruffalo',\r\n    'Chris Hemsworth',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'incredibles 2': [\r\n    'Incredibles 2',\r\n    'Samuel L. Jackson',\r\n    'Eli Fucile',\r\n    'Huckleberry Milner',\r\n    'Sarah Vowell',\r\n    'Holly Hunter',\r\n    'Craig T. Nelson',\r\n  ],\r\n  'jurassic world fallen kingdom': [\r\n    'Jurassic World: Fallen Kingdom',\r\n    'James Cromwell',\r\n    'Daniella Pineda',\r\n    'Justice Smith',\r\n    'Rafe Spall',\r\n    'Bryce Dallas Howard',\r\n    'Chris Pratt',\r\n  ],\r\n  'aquaman': [\r\n    'Aquaman',\r\n    'Yahya Abdul-Mateen II',\r\n    'Dolph Lundgren',\r\n    'Patrick Wilson',\r\n    'Willem Dafoe',\r\n    'Amber Heard',\r\n    'Jason Momoa',\r\n  ],\r\n  'deadpool 2': [\r\n    'Deadpool 2',\r\n    'T.J. Miller',\r\n    'Zazie Beetz',\r\n    'Julian Dennison',\r\n    'Morena Baccarin',\r\n    'Josh Brolin',\r\n    'Ryan Reynolds',\r\n  ],\r\n  'the grinch': [\r\n    'The Grinch',\r\n    'Pharrell Williams',\r\n    'Angela Lansbury',\r\n    'Kenan Thompson',\r\n    'Rashida Jones',\r\n    'Cameron Seely',\r\n    'Benedict Cumberbatch',\r\n  ],\r\n  'mission impossible fallout': [\r\n    'Mission: Impossible - Fallout',\r\n    'Sean Harris',\r\n    'Rebecca Ferguson',\r\n    'Simon Pegg',\r\n    'Ving Rhames',\r\n    'Henry Cavill',\r\n    'Tom Cruise',\r\n  ],\r\n  'ant man and the wasp': [\r\n    'Ant-Man and the Wasp',\r\n    'Michael Douglas',\r\n    'Laurence Fishburne',\r\n    'Michelle Pfeiffer',\r\n    'Michael Peña',\r\n    'Evangeline Lilly',\r\n    'Paul Rudd',\r\n  ],\r\n  'bohemian rhapsody': [\r\n    'Bohemian Rhapsody',\r\n    'Aidan Gillen',\r\n    'Joe Mazzello',\r\n    'Ben Hardy',\r\n    'Gwilym Lee',\r\n    'Lucy Boynton',\r\n    'Rami Malek',\r\n  ],\r\n  'avengers endgame': [\r\n    'Avengers: Endgame',\r\n    'Josh Brolin',\r\n    'Brie Larson',\r\n    'Chris Hemsworth',\r\n    'Mark Ruffalo',\r\n    'Chris Evans',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'the lion king (2019)': [\r\n    'The Lion King (2019)',\r\n    'John Kani',\r\n    'Billy Eichner',\r\n    'Alfre Woodard',\r\n    'Chiwetel Ejiofor',\r\n    'Seth Rogen',\r\n    'Donald Glover',\r\n  ],\r\n  'frozen ii': [\r\n    'Frozen II',\r\n    'Sterling K. Brown',\r\n    'Martha Plimpton',\r\n    'Jonathan Groff',\r\n    'Josh Gad',\r\n    'Idina Menzel',\r\n    'Kristen Bell',\r\n  ],\r\n  'toy story 4': [\r\n    'Toy Story 4',\r\n    'Jordan Peele',\r\n    'Keegan-Michael Key',\r\n    'Tony Hale',\r\n    'Annie Potts',\r\n    'Tim Allen',\r\n    'Tom Hanks',\r\n  ],\r\n  'captain marvel': [\r\n    'Captain Marvel',\r\n    'Lashana Lynch',\r\n    'Lee Pace',\r\n    'Djimon Hounsou',\r\n    'Ben Mendelsohn',\r\n    'Samuel L. Jackson',\r\n    'Brie Larson',\r\n  ],\r\n  'spider man far from home': [\r\n    'Spider-Man: Far From Home',\r\n    'Jon Favreau',\r\n    'Cobie Smulders',\r\n    'Jake Gyllenhaal',\r\n    'Zendaya',\r\n    'Samuel L. Jackson',\r\n    'Tom Holland',\r\n  ],\r\n  'aladdin': [\r\n    'Aladdin',\r\n    'Nasim Pedrad',\r\n    'Navid Negahban',\r\n    'Marwan Kenzari',\r\n    'Naomi Scott',\r\n    'Mena Massoud',\r\n    'Will Smith',\r\n  ],\r\n  'joker': [\r\n    'Joker',\r\n    'Douglas Hodge',\r\n    'Brett Cullen',\r\n    'Frances Conroy',\r\n    'Zazie Beetz',\r\n    'Robert De Niro',\r\n    'Joaquin Phoenix',\r\n  ],\r\n  'jumanji the next level': [\r\n    'Jumanji: The Next Level',\r\n    'Awkwafina',\r\n    'Nick Jonas',\r\n    'Karen Gillan',\r\n    'Kevin Hart',\r\n    'Jack Black',\r\n    'Dwayne Johnson',\r\n  ],\r\n  'bad boys for life': [\r\n    'Bad Boys for Life',\r\n    'Charles Melton',\r\n    'Alexander Ludwig',\r\n    'Vanessa Hudgens',\r\n    'Paola Nuñez',\r\n    'Martin Lawrence',\r\n    'Will Smith',\r\n  ],\r\n  'sonic the hedgehog': [\r\n    'Sonic the Hedgehog',\r\n    'Adam Pally',\r\n    'Natasha Rothwell',\r\n    'Tika Sumpter',\r\n    'James Marsden',\r\n    'Jim Carrey',\r\n    'Ben Schwartz',\r\n  ],\r\n  'birds of prey': [\r\n    'Birds of Prey',\r\n    'Ewan McGregor',\r\n    'Chris Messina',\r\n    'Rosie Perez',\r\n    'Jumee Smollett-Bell',\r\n    'Mary Elizabeth Winstead',\r\n    'Margot Robbie',\r\n  ],\r\n  'dolittle': [\r\n    'Dolittle',\r\n    'Octavia Spencer',\r\n    'Kumail Nanjiani',\r\n    'John Cena',\r\n    'Rami Malek',\r\n    'Emma Thompson',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'the invisible man': [\r\n    'The Invisible Man',\r\n    'Michael Dorman',\r\n    'Harriet Dyer',\r\n    'Storm Reid',\r\n    'Aldis Hodge',\r\n    'Oliver Jackson-Cohen',\r\n    'Elisabeth Moss',\r\n  ],\r\n  'the call of the wild': [\r\n    'The Call of the Wild',\r\n    'Bradley Whitford',\r\n    'Karen Gillan',\r\n    'Cara Gee',\r\n    'Dan Stevens',\r\n    'Omar Sy',\r\n    'Harrison Ford',\r\n  ],\r\n  'onward': [\r\n    'Onward',\r\n    'Mel Rodriguez',\r\n    'Kyle Bornheimer',\r\n    'Octavia Spencer',\r\n    'Julia Louis-Dreyfus',\r\n    'Chris Pratt',\r\n    'Tom Holland',\r\n  ],\r\n  'the croods a new age': [\r\n    'The Croods: A New Age',\r\n    'Leslie Mann',\r\n    'Peter Dinklage',\r\n    'Kelly Marie Tran',\r\n    'Ryan Reynolds',\r\n    'Emma Stone',\r\n    'Nicolas Cage',\r\n  ],\r\n  'tenet': [\r\n    'Tenet',\r\n    'Kenneth Branagh',\r\n    'Michael Caine',\r\n    'Dimple Kapadia',\r\n    'Elizabeth Debicki',\r\n    'Robert Pattinson',\r\n    'John David Washington',\r\n  ],\r\n  'wonder woman 1984': [\r\n    'Wonder Woman 1984',\r\n    'Connie Nielsen',\r\n    'Robin Wright',\r\n    'Pedro Pascal',\r\n    'Kristen Wiig',\r\n    'Chris Pine',\r\n    'Gal Gadot',\r\n  ],\r\n  'venom let there be carnage': [\r\n    'Venom: Let There Be Carnage',\r\n    'Woody Harrelson',\r\n    'Stephen Graham',\r\n    'Reid Scott',\r\n    'Naomie Harris',\r\n    'Michelle Williams',\r\n    'Tom Hardy',\r\n  ],\r\n  'black widow': [\r\n    'Black Widow',\r\n    'William Hurt',\r\n    'Olga Kurylenko',\r\n    'O-T Fagbenle',\r\n    'David Harbour',\r\n    'Florence Pugh',\r\n    'Scarlett Johansson',\r\n  ],\r\n  'f9': [\r\n    'F9',\r\n    'Nathalie Emmanuel',\r\n    'John Cena',\r\n    'Chris \"Ludacris\" Bridges',\r\n    'Tyrese Gibson',\r\n    'Michelle Rodriguez',\r\n    'Vin Diesel',\r\n  ],\r\n  'eternals': [\r\n    'Eternals',\r\n    'Lauren Ridloff',\r\n    'Brian Tyree Henry',\r\n    'Lia McHugh',\r\n    'Kumail Nanjiani',\r\n    'Richard Madden',\r\n    'Gemma Chan',\r\n  ],\r\n  'no time to die': [\r\n    'No Time to Die',\r\n    'Naomie Harris',\r\n    'Ben Whinshaw',\r\n    'Lashana Lynch',\r\n    'Rami Malek',\r\n    'Lea Seydoux',\r\n    'Daniel Craig',\r\n  ],\r\n  'sing 2': [\r\n    'Sing 2',\r\n    'Tori Kelly',\r\n    'Bobby Cannavale',\r\n    'Taron Egerton',\r\n    'Scarlett Johansson',\r\n    'Reese Witherspoon',\r\n    'Matthew McConaughey',\r\n  ],\r\n  'a quiet place part ii': [\r\n    'A Quiet Place Part II',\r\n    'John Krasinski',\r\n    'Djimon Hounsou',\r\n    'Noah Jupe',\r\n    'Millicent Simmonds',\r\n    'Cillian Murphy',\r\n    'Emily Blunt',\r\n  ],\r\n  'ghostbusters afterlife': [\r\n    'Ghostbusters: Afterlife',\r\n    'Bill Murray',\r\n    'Dan Aykroyd',\r\n    'Paul Rudd',\r\n    'Mckenna Grace',\r\n    'Finn Wolfhard',\r\n    'Carrie Coon',\r\n  ],\r\n  'scream': [\r\n    'Scream',\r\n    'Mikey Madison',\r\n    'Jack Quaid',\r\n    'Melissa Barrera',\r\n    'David Arquette',\r\n    'Courteney Cox',\r\n    'Neve Campbell',\r\n  ],\r\n  'uncharted': [\r\n    'Uncharted',\r\n    'Rudy Pankow',\r\n    'Tati Gabrielle',\r\n    'Sophia Ali',\r\n    'Antonio Banderas',\r\n    'Mark Wahlberg',\r\n    'Tom Holland',\r\n  ],\r\n  'the batman': [\r\n    'The Batman',\r\n    'Colin Farrell',\r\n    'Andy Serkis',\r\n    'Paul Dano',\r\n    'Jeffrey Wright',\r\n    'Zoe Kravitz',\r\n    'Robert Pattinson',\r\n  ],\r\n  'what lies beneath': [\r\n    'What Lies Beneath',\r\n    'Ray Baker',\r\n    'James Remar',\r\n    'Miranda Otto',\r\n    'Diana Scarwid',\r\n    'Michelle Pfeiffer',\r\n    'Harrison Ford',\r\n  ],\r\n  'x men': [\r\n    'X-Men',\r\n    'Halle Berry',\r\n    'James Marsden',\r\n    'Famke Janssen',\r\n    'Ian McKellen',\r\n    'Patrick Stewart',\r\n    'Hugh Jackman',\r\n  ],\r\n  'the perfect storm': [\r\n    'The Perfect Storm',\r\n    'William Fichtner',\r\n    'John C. Reilly',\r\n    'John Hawkes',\r\n    'Diane Lane',\r\n    'Mark Wahlberg',\r\n    'George Clooney',\r\n  ],\r\n  'meet the parents': [\r\n    'Meet the Parents',\r\n    'Owen Wilson',\r\n    'Blythe Danner',\r\n    'Teri Polo',\r\n    'Nicole DeHuff',\r\n    'Ben Stiller',\r\n    'Robert De Niro',\r\n  ],\r\n  'how the grinch stole christmas': [\r\n    'How the Grinch Stole Christmas',\r\n    'Molly Shannon',\r\n    'Bill Irwin',\r\n    'Taylor Momsen',\r\n    'Jeffrey Tambor',\r\n    'Christine Baranski',\r\n    'Jim Carrey',\r\n  ],\r\n  'dinosaur': [\r\n    'Dinosaur',\r\n    'Samuel E. Wright',\r\n    'Hayden Panettiere',\r\n    'Max Casella',\r\n    'Ossie Davis',\r\n    'Alfre Woodard',\r\n    'D.B. Sweeney',\r\n  ],\r\n  'what women want': [\r\n    'What Women Want',\r\n    'Lauren Holly',\r\n    'Ashley Johnson',\r\n    'Alan Alda',\r\n    'Marisa Tomei',\r\n    'Helen Hunt',\r\n    'Mel Gibson',\r\n  ],\r\n  'cast away': [\r\n    'Cast Away',\r\n    'Vince Martin',\r\n    'Lari White',\r\n    'Chris Noth',\r\n    'Nick Searcy',\r\n    'Helen Hunt',\r\n    'Tom Hanks',\r\n  ],\r\n  'gladiator': [\r\n    'Gladiator',\r\n    'Richard Harris',\r\n    'Djimon Hounsou',\r\n    'Derek Jacobi',\r\n    'Connie Nielsen',\r\n    'Joaquin Phoenix',\r\n    'Russell Crowe',\r\n  ],\r\n  'mission impossible 2': [\r\n    'Mission Impossible 2',\r\n    'Brendan Gleeson',\r\n    'Ving Rhames',\r\n    'Richard Roxburgh',\r\n    'Thandie Newton',\r\n    'Dougray Scott',\r\n    'Tom Cruise',\r\n  ],\r\n  'harry potter and the half blood prince': [\r\n    'Harry Potter and the Half-Blood Prince',\r\n    'Michael Gambon',\r\n    'Ralph Fiennes',\r\n    'Jim Broadbent',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'iron man': [\r\n    'Iron Man',\r\n    'Paul Bettany',\r\n    'Gwyneth Paltrow',\r\n    'Shaun Toub',\r\n    'Jeff Bridges',\r\n    'Terrence Howard',\r\n    'Robert Downey Jr.',\r\n  ],\r\n  'harry potter and the deathly hallows part 2': [\r\n    'Harry Potter and the Deathly Hallows Part 2',\r\n    'Michael Gambon',\r\n    'Ralph Fiennes',\r\n    'Ciaran Hinds',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'harry potter and the deathly hallows part 1': [\r\n    'Harry Potter and the Deathly Hallows Part 1',\r\n    'Michael Gambon',\r\n    'Ralph Fiennes',\r\n    'Bill Nighy',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'harry potter and the order of the phoenix': [\r\n    'Harry Potter and the Order of the Phoenix',\r\n    'Michael Gambon',\r\n    'Ralph Fiennes',\r\n    'Imelda Staunton',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'harry potter and the goblet of fire': [\r\n    'Harry Potter and the Goblet of Fire',\r\n    'Michael Gambon',\r\n    'Ralph Fiennes',\r\n    'Robert Pattinson',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'harry potter and the prisoner of azkaban': [\r\n    'Harry Potter and the Prisoner of Azkaban',\r\n    'Michael Gambon',\r\n    'Gary Oldman',\r\n    'David Thewlis',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'harry potter and the chamber of secrets': [\r\n    'Harry Potter and the Chamber of Secrets',\r\n    'Richard Harris',\r\n    'Christian Coulson',\r\n    'Kenneth Branagh',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'harry potter and the sorcerers stone': [\r\n    \"Harry Potter and the Sorcerer's Stone\",\r\n    'Richard Harris',\r\n    'Robbie Coltrane',\r\n    'Ian Hart',\r\n    'Emma Watson',\r\n    'Rupert Grint',\r\n    'Daniel Radcliffe',\r\n  ],\r\n  'spider man no way home': [\r\n    'Spider-Man: No Way Home',\r\n    'Alfred Molina',\r\n    'Willem Dafoe',\r\n    'Jamie Foxx',\r\n    'Benedict Cumberbatch',\r\n    'Zendaya',\r\n    'Tom Holland',\r\n  ],\r\n  'star wars episode i the phantom menance': [\r\n    'Star Wars Episode I: The Phantom Menace',\r\n    'Natalie Portman',\r\n    'Jake Lloyd',\r\n    'Peter Serafinowicz',\r\n    'Ian McDiarmid',\r\n    'Ewan McGregor',\r\n    'Liam Neeson',\r\n  ],\r\n  'star wars episode ii attack of the clones': [\r\n    'Star Wars Episode II: Attack of the Clones',\r\n    'Natalie Portman',\r\n    'Christopher Lee',\r\n    'Samuel L. Jackson',\r\n    'Temuera Morrison',\r\n    'Ewan McGregor',\r\n    'Hayden Christensen',\r\n  ],\r\n  'star wars episode iii revenge of the sith': [\r\n    'Star Wars Episode III: Revenge of the Sith',\r\n    'Natalie Portman',\r\n    'Christopher Lee',\r\n    'Samuel L. Jackson',\r\n    'Ian McDiarmid',\r\n    'Ewan McGregor',\r\n    'Hayden Christensen',\r\n  ],\r\n  'star wars episode vii the force awakens': [\r\n    'Star Wars Episode VII: The Force Awakens',\r\n    'Carrie Fisher',\r\n    'Harrison Ford',\r\n    'Oscar Isaac',\r\n    'John Boyega',\r\n    'Adam Driver',\r\n    'Daisy Ridley',\r\n  ],\r\n  'star wars episode viii the last jedi': [\r\n    'Star Wars Episode VIII: The Last Jedi',\r\n    'Carrie Fisher',\r\n    'Mark Hamill',\r\n    'Oscar Isaac',\r\n    'John Boyega',\r\n    'Adam Driver',\r\n    'Daisy Ridley',\r\n  ],\r\n  'star wars episode ix the rise of skywalker': [\r\n    'Star Wars Episode IX: The Rise of Skywalker',\r\n    'Billy Dee Williams',\r\n    'Ian McDiarmid',\r\n    'Oscar Isaac',\r\n    'John Boyega',\r\n    'Adam Driver',\r\n    'Daisy Ridley',\r\n  ],\r\n  'shang chi and the legend of the ten rings': [\r\n    'Shang-Chi and the Legend of the Ten Rings',\r\n    'Benedict Wong',\r\n    'Florian Munteanu',\r\n    'Fala Chen',\r\n    \"Meng'er Zhang\",\r\n    'Awkwafina',\r\n    'Simu Liu',\r\n  ],\r\n};\r\n\r\nexport default Data;\r\n","// we use a randomized array the size of the sample set to set the order in which the Stardles are played from an initial date.\r\n// This can be reconfigured at any time in about thirty seconds.\r\n\r\nexport const Order: Array<number> = [\r\n  107, 73, 153, 50, 37, 60, 22, 152, 180, 104, 128, 16, 133, 59, 90, 82, 87,\r\n  157, 176, 155, 172, 166, 111, 23, 44, 139, 11, 126, 161, 52, 158, 93, 115,\r\n  117, 112, 66, 189, 146, 71, 188, 47, 9, 1, 108, 4, 30, 83, 79, 182, 121, 142,\r\n  114, 173, 119, 0, 137, 98, 162, 143, 14, 75, 171, 154, 81, 91, 35, 191, 134,\r\n  49, 76, 122, 17, 15, 148, 51, 113, 156, 177, 95, 92, 6, 181, 55, 36, 89, 109,\r\n  120, 187, 62, 40, 131, 57, 167, 56, 67, 147, 74, 72, 174, 150, 31, 125, 160,\r\n  97, 3, 13, 99, 10, 169, 41, 43, 145, 110, 96, 7, 190, 77, 86, 185, 69, 178,\r\n  183, 84, 12, 130, 64, 140, 33, 149, 132, 42, 118, 58, 29, 61, 129, 175, 165,\r\n  102, 24, 103, 80, 53, 170, 94, 38, 45, 184, 138, 26, 106, 85, 159, 28, 163,\r\n  68, 116, 70, 164, 32, 144, 124, 21, 186, 54, 39, 151, 5, 18, 135, 141, 63, 2,\r\n  88, 179, 78, 65, 101, 136, 127, 20, 123, 8, 25, 27, 46, 48, 34, 100, 168, 105,\r\n  19,\r\n];\r\n\r\nexport const InitialDate = '4/29/2022';\r\n","const PointlessWords: Set<string> = new Set([\r\n  'the',\r\n  'The',\r\n  'a',\r\n  'A',\r\n  'an',\r\n  'An',\r\n  'and',\r\n  'And',\r\n  'of',\r\n  'Of',\r\n]);\r\n\r\nexport default PointlessWords;\r\n","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport ReactGA from 'react-ga'\r\nimport { Modal, ModalBody } from 'react-bootstrap';\r\nimport styled, { Keyframes, keyframes, StyledComponent } from 'styled-components';\r\nimport { flipInX, fadeInRight } from 'react-animations';\r\nimport Data from './constants/Data';\r\nimport { Order, InitialDate } from './constants/Order';\r\nimport PointlessWords from './constants/PointlessWords';\r\nimport './styles.css';\r\n\r\nconst trackingID : string = 'UA-227712205-1';\r\n\r\nReactGA.initialize(trackingID);\r\n\r\n// used to style the guesses for being correct/close/incorrect\r\ninterface InputStyle{\r\n  backgroundColor?: string;\r\n  borderRadius?: number;\r\n  paddingTop?: number;\r\n}\r\n\r\n// https://javascript.info/cookie#getcookie-name\r\nfunction getCookie(name: string) {\r\n  const matches : RegExpMatchArray | null = document.cookie.match(\r\n    new RegExp(\r\n      `(?:^|; )${name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1')}=([^;]*)`\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : '';\r\n}\r\n\r\n// all the possible answers, sorted alphabetically\r\nconst filmdata: Array<string> = Object.keys(Data);\r\nfilmdata.sort();\r\n\r\n// need width and height for responsive design\r\nconst width : number = window.innerWidth;\r\nconst height : number = window.innerHeight;\r\n// if we're on a phone, we need to use different widths than if we're on a computer\r\nconst relevantWidth : number = width > height ? width / 3 : width * 0.9;\r\nconst relevantGraphWidth : number = width > height ? width / 5 : width * 0.75;\r\nconst relevantPadding : number = width > height ? relevantWidth : width * 0.05;\r\n// height of sections of puzzle remains the same proportion irrespective of platform\r\nconst spotHeight : number = height * 0.13;\r\n\r\n// the current time\r\nconst today: Date = new Date();\r\n// keeping a string date to compare with the one stored in the cookie.\r\nconst date = `${\r\n  today.getMonth() + 1\r\n}/${today.getDate()}/${today.getFullYear()}`;\r\n\r\n// initializing a new date object and setting it to midnight tomorrow\r\nconst tomorrow: Date = new Date();\r\ntomorrow.setDate(today.getDate() + 1);\r\ntomorrow.setHours(0, 0, 0, 0);\r\n// console.log(tomorrow.getTime(), today.getTime());\r\n\r\n// determining the number of days from the first date we started using this ordering array\r\nconst firstDay: Date = new Date(InitialDate);\r\nconst fromFirst: number = Math.floor(\r\n  (today.getTime() - firstDay.getTime()) / (1000 * 3600 * 24)\r\n);\r\n// console.log(today, firstDay)\r\n\r\n// animations\r\nconst flipInAnimation : Keyframes = keyframes`${flipInX}`;\r\nconst fadeInRightAnimation : Keyframes = keyframes`${fadeInRight}`;\r\n\r\n// top level div for the puzzle itself\r\nconst Puzzle : StyledComponent<'div', any, {}, never> = styled.div`\r\n  width: ${relevantWidth}px;\r\n  box-sizing: content-box;\r\n  margin-left: ${relevantPadding}px;\r\n`;\r\n\r\n// the buttons that the user guesses with\r\nconst HoverButton : StyledComponent<'button', any, {}, never> = styled.button`\r\n  width: ${relevantWidth}px;\r\n  margin-left: ${relevantPadding}px;\r\n  border-radius: ${height * 0.02}px;\r\n  height: ${height * 0.04}px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  border-width: 1px;\r\n  border-color: black;\r\n  z-index: 7;\r\n  color: black;\r\n  text-align: center;\r\n`;\r\n\r\n// the text in the hover buttons\r\nconst HoverText : StyledComponent<'span', any, {}, never> = styled.span`\r\n  font-size: ${height / 40}px;\r\n`;\r\n\r\n// a bar that displays instead of an actor\r\nconst Hider : StyledComponent<'div', any, {}, never> = styled.div`\r\n  height: ${spotHeight * 0.45}px;\r\n  border-radius: ${height * 0.02}px;\r\n  animation: 1s ${fadeInRightAnimation};\r\n`;\r\n\r\n// take up the whole page\r\nconst TopLevel : StyledComponent<'div', any, {}, never> = styled.div`\r\n  height: ${height}px;\r\n  padding: auto;\r\n  @media screen and (max-width: 1000px){\r\n    height: ${height * 1.5}px;\r\n  }\r\n`;\r\n\r\n// text input\r\nconst Input : StyledComponent<'input', any, {}, never> = styled.input`\r\n  border-radius: ${height * 0.02}px;\r\n  border-width: 1px;\r\n  border-color: black;\r\n  border-style: solid;\r\n  height: ${spotHeight * 0.45}px;\r\n  font-size: ${height / 40}px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n`;\r\n\r\n// the text that replaces the input once it is used\r\nconst AboveInput : StyledComponent<'div', any, {}, never> = styled.div`\r\n  border-radius: ${height * 0.02}px;\r\n  border-width: 1px;\r\n  border-color: black;\r\n  border-style: solid;\r\n  height: ${spotHeight * 0.45}px;\r\n  font-size: ${height / 40}px;\r\n  overflow: hidden;\r\n  text-align: center;\r\n`;\r\n\r\n// one of the six actor-input pairs\r\nconst Spot : StyledComponent<'div', any, {}, never> = styled.div`\r\n  margin-top: 0;\r\n  padding-bottom: ${spotHeight * 0.1}px;\r\n  height: ${spotHeight}px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// the name of an actor\r\nconst Actor : StyledComponent<'div', any, {}, never> = styled.div`\r\n  padding-top: ${height / 200}px;\r\n  height: ${spotHeight * 0.45}px;\r\n  font-size: ${height / 40}px;\r\n  overflow: hidden;\r\n  border-width: 1px;\r\n  border-color: black;\r\n  border-radius: ${height / 50}px;\r\n  text-align: center;\r\n  border-style: solid;\r\n  animation: 1s ${flipInAnimation};\r\n`;\r\n\r\n// navbar with media tag for maximum size\r\nconst MyNavbar : StyledComponent<'div', any, {}, never> = styled.div`\r\n  height: ${height * 0.08}px;\r\n  margin-bottom: ${height * 0.02}px;\r\n  @media screen and (max-width: 700px) {\r\n    height: ${width * 0.08}px;\r\n    margin-bottom: ${height * 0.1 - width * 0.08}px;\r\n  }\r\n  top: 0;\r\n  width: 100%;\r\n`;\r\n\r\n// navbar text again with media tag\r\nconst NavbarText : StyledComponent<'span', any, {}, never> = styled.span`\r\n  cursor: pointer;\r\n  font-size: ${width * 0.02}px;\r\n  position: absolute;\r\n  padding-top: ${height * 0.02}px;\r\n  overflow: hidden;\r\n  width: ${width * 0.2}px;\r\n  text-align: center;\r\n  @media screen and (min-width: 1000px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\n// the S T A R D L E logo\r\nconst Logo : StyledComponent<'span', any, {}, never> = styled.span`\r\n  color: rgba(127, 127, 127, 0.9);\r\n  font-size: ${width / 30}px;\r\n  cursor: auto;\r\n  position: absolute;\r\n  text-align: center;\r\n  width: ${width * 0.2}px;\r\n  display: inline-block;\r\n  margin-top: ${height * 0.01}px;\r\n  @media screen and (min-width: 1000px) {\r\n    font-size: 33px;\r\n  }\r\n`;\r\n\r\n// the title of a stat\r\nconst StatTitle : StyledComponent<'div', any, {}, never> = styled.div`\r\n  font-size: ${height / 50}px;\r\n  text-align: center;\r\n`;\r\n\r\n// a stat (streak, winrate, etc.)\r\nconst Stat : StyledComponent<'div', any, {}, never> = styled.div`\r\n  font-size: ${height / 30}px;\r\n  text-align: center;\r\n`;\r\n\r\n// version of the text logo in the modal\r\nconst ModalLogo : StyledComponent<'span', any, {}, never> = styled.span`\r\n  color: rgba(127,127,127,.8);\r\n  font-size: ${height / 30}px;\r\n`\r\n\r\nconst RulesText : StyledComponent<'div', any, {}, never> = styled.div`\r\n  margin-top: ${height / 120}px;\r\n  margin-bottom: ${height / 120}px;\r\n  margin-left: ${width / 50}px;\r\n  margin-right: ${width / 50}px;\r\n`\r\n\r\nconst RulesAboveInput : StyledComponent<'div', any, {}, never> = styled.div`\r\n  border-radius: ${height * 0.02}px;\r\n  border-width: 1px;\r\n  border-color: black;\r\n  border-style: solid;\r\n  height: ${spotHeight * 0.45}px;\r\n  font-size: ${height / 40}px;\r\n  margin-left: ${width / 50}px;\r\n  margin-right: ${width / 50}px;\r\n`;\r\n\r\n// the possible locations of the hovering buttons\r\nconst hoverLocations : {top: number}[] = [\r\n  { top: height * 0.21 },\r\n  { top: height * 0.25 },\r\n  { top: height * 0.29 },\r\n  { top: height * 0.34 },\r\n  { top: height * 0.38 },\r\n  { top: height * 0.42 },\r\n  { top: height * 0.47 },\r\n  { top: height * 0.51 },\r\n  { top: height * 0.55 },\r\n  { top: height * 0.6 },\r\n  { top: height * 0.64 },\r\n  { top: height * 0.68 },\r\n  { top: height * 0.73 },\r\n  { top: height * 0.77 },\r\n  { top: height * 0.81 },\r\n  { top: height * 0.86 },\r\n  { top: height * 0.9 },\r\n  { top: height * 0.94 },\r\n];\r\n\r\n// reset cookie for debugging\r\n// document.cookie = 'data='\r\n\r\n// the data we use from the cookie!\r\nlet dataCookie : string = getCookie('data');\r\n// console.log(dataCookie);\r\nif (!dataCookie || dataCookie.length < 1) {\r\n  // 1 guess solves, 2, 3, 4, 5, 6, miss, streak, has played today, guess 1, 2, 3, 4, 5, 6, has seen rules, dark mode, date last played, maxstreak\r\n  document.cookie = `data=${encodeURIComponent(\r\n    '0//0//0//0//0//0//0//0//false//_//_//_//_//_//_//false//false//1/2/2003//0'\r\n  )}; expires=Tue, 19 Jan 2038 03:14:07 GMT;`;\r\n  dataCookie =\r\n    '0//0//0//0//0//0//0//0//false//_//_//_//_//_//_//false//false//1/2/2003//0';\r\n}\r\n\r\n// how long til midnight tomorrow\r\nconst timeLeft : number = tomorrow.getTime() - today.getTime();\r\n\r\n// splitting our cookie data into an array\r\nconst outsideData : Array<string> = dataCookie.split('//');\r\n// has our user seen the rules yet? if no, show it to them\r\nconst outsideRules : boolean = outsideData[15] === 'false';\r\n// if the user has not seen the rules, they will after having loaded the site, so set this bool to true\r\nif (outsideRules === true) {\r\n  outsideData[15] = 'true';\r\n  document.cookie = `data=${encodeURIComponent(\r\n    outsideData.join('//')\r\n  )}; expires=Tue, 19 Jan 2038 03:14:07 GMT;`;\r\n}\r\n// initial false value for typing purposes, never changed\r\nconst initialVisible: boolean = false;\r\n// has our user played today?\r\nconst todaySolved : boolean = outsideData[17] === date;\r\n// if they have not, the cookie will have stored yesterday's guesses, remove them\r\nif (!todaySolved) {\r\n  for (let i : number = 9; i <= 14; i += 1) {\r\n    outsideData[i] = '_';\r\n  }\r\n  document.cookie = `data=${encodeURIComponent(\r\n    outsideData.join('//')\r\n  )}; expires=Tue, 19 Jan 2038 03:14:07 GMT;`;\r\n}\r\n\r\n// most commonly used number of attempts to solve, stored for graph width in stats modal\r\nconst outsideMaxAttempts : number = Math.max(\r\n  1,\r\n  Math.max(\r\n    parseInt(outsideData[0]),\r\n    parseInt(outsideData[1]),\r\n    parseInt(outsideData[2]),\r\n    parseInt(outsideData[3]),\r\n    parseInt(outsideData[4]),\r\n    parseInt(outsideData[5])\r\n  )\r\n);\r\n// how many times the user has played the game\r\nconst outsidePlayed : number =\r\n  parseInt(outsideData[0]) +\r\n  parseInt(outsideData[1]) +\r\n  parseInt(outsideData[2]) +\r\n  parseInt(outsideData[3]) +\r\n  parseInt(outsideData[4]) +\r\n  parseInt(outsideData[5]) +\r\n  parseInt(outsideData[6]);\r\n// how many times the user has won the game, so, plays minus losses\r\nconst outsideWon : number = outsidePlayed - parseInt(outsideData[6]);\r\n// how many consecutive wins the user has\r\nconst outsideStreak : number = parseInt(outsideData[7]);\r\n// the most consecutive wins the user has ever had\r\nconst outsideMaxStreak : number = parseInt(outsideData[18]);\r\n\r\nexport default function App() {\r\n  // react ga pageview\r\n  useEffect(() => {\r\n    // console.log(window.location.href);\r\n    ReactGA.pageview(window.location.href);\r\n  }, []);\r\n\r\n  // keeping track of time for the countdown timer\r\n  const [secondsLeft, setSecondsLeft] : [number, Dispatch<SetStateAction<number>>] = useState(\r\n    Math.floor(timeLeft / 1000) % 60\r\n  );\r\n  const [minutesLeft, setMinutesLeft] : [number, Dispatch<SetStateAction<number>>] = useState(\r\n    Math.floor(timeLeft / (1000 * 60)) % 60\r\n  );\r\n  const [hoursLeft, setHoursLeft] : [number, Dispatch<SetStateAction<number>>] = useState(\r\n    Math.floor(timeLeft / (1000 * 60 * 60)) % 24\r\n  );\r\n\r\n  // ticking down every second\r\n  useEffect(() => {\r\n    const timer : NodeJS.Timeout = setTimeout(() => {\r\n      if (secondsLeft === 0) {\r\n        setSecondsLeft(60);\r\n        if (minutesLeft === 0) {\r\n          setMinutesLeft(60);\r\n          setHoursLeft(hoursLeft - 1);\r\n        } else {\r\n          setMinutesLeft(minutesLeft - 1);\r\n        }\r\n      } else {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  // converts number from 0 - 60 to the appropriate amount of seconds/minutes\r\n  function getstrTimeLeft(time: number) {\r\n    if (time === 60) {\r\n      return '00';\r\n    }\r\n    if (time < 10) {\r\n      return `0${time}`;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  // using all these as middlemen to set our state objects rather than do it through the array itself\r\n  let holdoverdata : string[] = filmdata;\r\n  let peekGuessStyles : object[];\r\n  let peekBools : boolean[];\r\n  let peekGuessSpans : string[];\r\n  let peekHoverSpans : string[];\r\n  let peekHoverDisplays : boolean[];\r\n  let peekCurHoverLocations : {top : number}[];\r\n\r\n  // the correct answer\r\n  const [correct] : [string[], Dispatch<SetStateAction<string[]>>] = useState(Data[filmdata[Order[fromFirst % Order.length]]]);\r\n\r\n  // our stats calculated earlier, as well as successrate\r\n  const [maxAttempts, setMaxAttempts] : [number, Dispatch<SetStateAction<number>>] = useState(outsideMaxAttempts);\r\n  const [played, setPlayed] : [number, Dispatch<SetStateAction<number>>] = useState(outsidePlayed);\r\n  const [streak, setStreak] : [number, Dispatch<SetStateAction<number>>] = useState(outsideStreak);\r\n  const [maxStreak, setMaxStreak] : [number, Dispatch<SetStateAction<number>>] = useState(outsideMaxStreak);\r\n  const [successRate, setSuccessRate] : [number, Dispatch<SetStateAction<number>>] = useState(\r\n    outsideWon / Math.max(1, played)\r\n  );\r\n  // console.log(successRate)\r\n\r\n  // date from the cookie\r\n  const [data] : [string[], Dispatch<SetStateAction<string[]>>] = useState(outsideData);\r\n  // whether or not the puzzle is playable depends on if it has been played today, which we track here\r\n  const [solved, setSolved] : [boolean, Dispatch<SetStateAction<boolean>>] = useState(todaySolved);\r\n\r\n  // which of the six spots is currently being used for input\r\n  const [active, setActive] : [number, Dispatch<SetStateAction<number>>] = useState(0);\r\n  // can we see the rules/stats/about modal?\r\n  const [rulesVisible, setRulesVisible] : [boolean, Dispatch<SetStateAction<boolean>>] = useState(outsideRules);\r\n  const [statsVisible, setStatsVisible] : [boolean, Dispatch<SetStateAction<boolean>>] = useState(initialVisible);\r\n  const [aboutVisible, setAboutVisible] : [boolean, Dispatch<SetStateAction<boolean>>] = useState(initialVisible);\r\n\r\n  // are we in dark mode?\r\n  const [darkMode, setDarkMode] : [boolean, Dispatch<SetStateAction<boolean>>] = useState(data[16] === 'true');\r\n  // if we are not we have to use classnames to enforce the background color on the body\r\n  if (!darkMode) {\r\n    document.body.classList.add('white');\r\n  }\r\n\r\n  // where can we input text right now?\r\n  const [bools, setBools] : [boolean[], Dispatch<SetStateAction<boolean[]>>] = useState(\r\n    solved === false\r\n      ? [true, false, false, false, false, false]\r\n      : [false, false, false, false, false, false]\r\n  );\r\n\r\n  // these are the style options for a guess being correct, close, or incorrect.\r\n  const green : InputStyle = {\r\n    backgroundColor: '#77D353',\r\n    borderRadius: height / 50,\r\n    paddingTop: height / 200,\r\n  };\r\n  const yellow : InputStyle = {\r\n    backgroundColor: '#FFD185',\r\n    borderRadius: height / 50,\r\n    paddingTop: height / 200,\r\n  };\r\n  const gray : InputStyle = {\r\n    backgroundColor: 'lightgray',\r\n    borderRadius: height / 50,\r\n    paddingTop: height / 200,\r\n  };\r\n  const blank : InputStyle = {};\r\n\r\n  // things i don't want to display\r\n  const none : {display: string} = {\r\n    display: 'none',\r\n  };\r\n\r\n  // function to check if a guess is close to the correct answer, provided it isn't correct\r\n  function yellowCheck(ourGuess: string) {\r\n    // sanitizing both the guess and the correct answer\r\n    const strGuess : string = ourGuess.replace(/[^a-z0-9 ]/gi, '');\r\n    const correctSans : string = correct[0].replace(/[^a-z0-9 ]/gi, '');\r\n    // making lists of words! wordsguess is a set so we can check if it has a word slightly faster\r\n    const wordsGuess : Set<string> = new Set(strGuess.split(' '));\r\n    const wordset : string[] = correctSans.split(' ');\r\n    let flag : boolean = false;\r\n    wordset.forEach((item) => {\r\n      if (!PointlessWords.has(item) && wordsGuess.has(item)) {\r\n        // if you return in a forEach you just break the loop, so I'm using a flag outside the function.\r\n        flag = true;\r\n      }\r\n    });\r\n    return flag;\r\n  }\r\n\r\n  // a relic from an early version, reason for its presence in textHandler\r\n  const [olddiv, setOlddiv] : [string, Dispatch<SetStateAction<string>>] = useState('');\r\n  // the actors we're displaying\r\n  const [actors, setActors] : [string[], Dispatch<SetStateAction<string[]>>] = useState(\r\n    solved === false\r\n      ? [correct[1], '_', '_', '_', '_', '_']\r\n      : [correct[1], correct[2], correct[3], correct[4], correct[5], correct[6]]\r\n  );\r\n  // the user's guesses for the day\r\n  const [guessSpans, setGuessSpans] : [string[], Dispatch<SetStateAction<string[]>>] = useState(\r\n    solved === false\r\n      ? ['', '', '', '', '', '']\r\n      : [data[9], data[10], data[11], data[12], data[13], data[14]]\r\n  );\r\n  // the styles on the boxes that display the user's guess after they have made it\r\n  const [guessStyles, setGuessStyles] : [InputStyle[], Dispatch<SetStateAction<InputStyle[]>>] = useState(\r\n    solved === false\r\n      ? [blank, blank, blank, blank, blank, blank]\r\n      : [\r\n          (() => {\r\n            // writing and calling lambdas so that we may avoid having nested ternary expressions, which eslint does not like\r\n            if (data[9].length > 1) {\r\n              if (data[9] === correct[0]) {\r\n                return green;\r\n              }\r\n              if (yellowCheck(data[9])) {\r\n                return yellow;\r\n              }\r\n              return gray;\r\n            }\r\n            return blank;\r\n          }).call(undefined),\r\n          (() => {\r\n            if (data[10].length > 1) {\r\n              if (data[10] === correct[0]) {\r\n                return green;\r\n              }\r\n              if (yellowCheck(data[10])) {\r\n                return yellow;\r\n              }\r\n              return gray;\r\n            }\r\n            return blank;\r\n          }).call(undefined),\r\n          (() => {\r\n            if (data[11].length > 1) {\r\n              if (data[11] === correct[0]) {\r\n                return green;\r\n              }\r\n              if (yellowCheck(data[11])) {\r\n                return yellow;\r\n              }\r\n              return gray;\r\n            }\r\n            return blank;\r\n          }).call(undefined),\r\n          (() => {\r\n            if (data[12].length > 1) {\r\n              if (data[12] === correct[0]) {\r\n                return green;\r\n              }\r\n              if (yellowCheck(data[12])) {\r\n                return yellow;\r\n              }\r\n              return gray;\r\n            }\r\n            return blank;\r\n          }).call(undefined),\r\n          (() => {\r\n            if (data[13].length > 1) {\r\n              if (data[13] === correct[0]) {\r\n                return green;\r\n              }\r\n              if (yellowCheck(data[13])) {\r\n                return yellow;\r\n              }\r\n              return gray;\r\n            }\r\n            return blank;\r\n          }).call(undefined),\r\n          (() => {\r\n            if (data[14].length > 1) {\r\n              if (data[14] === correct[0]) {\r\n                return green;\r\n              }\r\n              if (yellowCheck(data[14])) {\r\n                return yellow;\r\n              }\r\n              return gray;\r\n            }\r\n            return blank;\r\n          }).call(undefined),\r\n        ]\r\n  );\r\n\r\n  // the text in the spans in the hover buttons\r\n  const [hoverSpans, setHoverSpans]  : [string[], Dispatch<SetStateAction<string[]>>] = useState(['', '', '']);\r\n  // whether or not a hover button is currently being displayed\r\n  const [hoverDisplays, setHoverDisplays]  : [boolean[], Dispatch<SetStateAction<boolean[]>>] = \r\n    useState([initialVisible, initialVisible, initialVisible]);\r\n  // where the hover buttons currently are\r\n  const [curHoverLocations, setCurHoverLocations]  : [{top : number}[], Dispatch<SetStateAction<{top : number}[]>>] = useState([\r\n    hoverLocations[0],\r\n    hoverLocations[1],\r\n    hoverLocations[2],\r\n  ]);\r\n\r\n  // shows the suggested possible guess using the user's text\r\n  function textHandler(pretext: string, column: number) {\r\n    // sanitized\r\n    const text : string = pretext.replace(/[^a-z0-9 ]/gi, '');\r\n    // the data displayed in each box\r\n    const newData : string[] = [];\r\n    // if the previous suggestions still work use them.\r\n    for (let i : number = 0; i < holdoverdata.length; i += 1) {\r\n      if (holdoverdata[i].includes(text.toLowerCase())) {\r\n        newData.push(holdoverdata[i]);\r\n      }\r\n    }\r\n\r\n    // if this isn't here the textbox updates are way too slow. not sure why. i think it's similar to how useEffect works, but I don't know.\r\n    setOlddiv(text);\r\n\r\n    holdoverdata = newData;\r\n    // setting the hover texts and display props to the appropriate values\r\n    peekHoverSpans = hoverSpans;\r\n    peekHoverDisplays = hoverDisplays;\r\n    // if there is no text, hide all of the hover buttons\r\n    if (text.length === 0) {\r\n      for (\r\n        let i : number = column * 3;\r\n        i < Math.min((column + 1) * 3, column * 3 + newData.length);\r\n        i += 1\r\n      ) {\r\n        peekHoverSpans[i % 3] = '';\r\n        peekHoverDisplays[i % 3] = false;\r\n      }\r\n      holdoverdata = filmdata;\r\n    } else {\r\n      for (let i : number = column * 3; i < (column + 1) * 3; i += 1) {\r\n        if (i < column * 3 + newData.length) {\r\n          [peekHoverSpans[i % 3]] = Data[newData[i - column * 3]];\r\n          peekHoverDisplays[i % 3] = true;\r\n        } else {\r\n          peekHoverSpans[i % 3] = '';\r\n          peekHoverDisplays[i % 3] = false;\r\n        }\r\n      }\r\n    }\r\n    // setting\r\n    setHoverSpans(peekHoverSpans);\r\n    setHoverDisplays(peekHoverDisplays);\r\n  }\r\n\r\n  // guess function takes in the current location, of the 18 possible, where the hover button clicked is\r\n  function guess(box: number) {\r\n    if (box > 17) {\r\n      // this will break the page if allowed to run so we abort it\r\n      return;\r\n    }\r\n    // which of the six spots are we in?\r\n    let section : number = Math.floor(box / 3);\r\n    // we set active to 1 + current value since a guess deactivates a section\r\n    setActive(active + 1);\r\n    // recording this guess in the cookie\r\n    data[section + 9] = hoverSpans[box % 3];\r\n    // setting the display text as the appropriate button text\r\n    peekGuessSpans = guessSpans;\r\n    peekGuessSpans[section] = hoverSpans[box % 3];\r\n    setGuessSpans(peekGuessSpans);\r\n    // if the guess is correct end the game\r\n    if (hoverSpans[box % 3] === correct[0]) {\r\n      // we solved it\r\n      setSolved(true);\r\n      // record how many guesses this took\r\n      data[section] = (parseInt(data[section]) + 1).toString();\r\n      // if we have a new record for most attempts with X guesses record that\r\n      if (parseInt(data[section]) > maxAttempts) {\r\n        setMaxAttempts(maxAttempts + 1);\r\n      }\r\n      // we have played today\r\n      data[8] = 'true';\r\n      // add 1 to streak\r\n      data[7] = (parseInt(data[7]) + 1).toString();\r\n      // record max streak if applicable\r\n      if (parseInt(data[7]) > maxStreak) {\r\n        setMaxStreak(parseInt(data[7]));\r\n        data[18] = data[7];\r\n      }\r\n      // set these things for the stat modal\r\n      setStreak(streak + 1);\r\n      setPlayed(played + 1);\r\n      // record last date played\r\n      data[17] = date;\r\n      // finally encode in the cookie\r\n      document.cookie = `data=${encodeURIComponent(\r\n        data.join('//')\r\n      )}; expires=Tue, 19 Jan 2038 03:14:07 GMT;`;\r\n      // set success rate for modal\r\n      setSuccessRate((outsideWon + 1) / (played + 1));\r\n      // set the displayed text to green\r\n      peekGuessStyles = guessStyles;\r\n      peekGuessStyles[section] = green;\r\n      setGuessStyles(peekGuessStyles);\r\n      // set all bools to false so no input can be made\r\n      peekBools = bools;\r\n      for (let i : number = 0; i < peekBools.length; i += 1) {\r\n        peekBools[i] = false;\r\n      }\r\n      setBools(peekBools);\r\n      // hide all the hover buttons\r\n      textHandler('', section);\r\n      // show all the actors\r\n      const peekactors : string[] = actors;\r\n      while (section < correct.length - 1) {\r\n        peekactors[section + 1] = correct[section + 2];\r\n        section += 1;\r\n      }\r\n      setActors(peekactors);\r\n      setTimeout(() => {\r\n        // we're about to show the stats modal so we need to make sure the timer is set to the right value\r\n        const curTimeLeft : number = tomorrow.getTime() - new Date().getTime();\r\n        setSecondsLeft(Math.floor(curTimeLeft / 1000) % 60);\r\n        setMinutesLeft(Math.floor(curTimeLeft / (1000 * 60)) % 60);\r\n        setHoursLeft(Math.floor(curTimeLeft / (1000 * 60 * 60)) % 24);\r\n        setStatsVisible(true);\r\n      }, 1000);\r\n      return;\r\n    }\r\n    // otherwise we take our current word and test for closeness\r\n    const curWord : string = hoverSpans[box % 3];\r\n    textHandler('', section);\r\n    // here is the test\r\n    const yellowResult : boolean = yellowCheck(curWord);\r\n    if (yellowResult) {\r\n      // if it is close, set the display box to yellow\r\n      peekGuessStyles = guessStyles;\r\n      peekGuessStyles[section] = yellow;\r\n      setGuessStyles(peekGuessStyles);\r\n    } else {\r\n      // otherwise set it to gray\r\n      peekGuessStyles = guessStyles;\r\n      peekGuessStyles[section] = gray;\r\n      setGuessStyles(peekGuessStyles);\r\n    }\r\n\r\n    // deny input to this section\r\n    peekBools = bools;\r\n    peekBools[section] = false;\r\n\r\n    // set the hover buttons to appropriate locations\r\n    peekCurHoverLocations = curHoverLocations;\r\n    peekCurHoverLocations[0] = hoverLocations[(section + 1) * 3];\r\n    peekCurHoverLocations[1] = hoverLocations[(section + 1) * 3 + 1];\r\n    peekCurHoverLocations[2] = hoverLocations[(section + 1) * 3 + 2];\r\n    setCurHoverLocations(peekCurHoverLocations);\r\n    if (box < 15) {\r\n      // if we have more to do show the next actor\r\n      peekBools[section + 1] = true;\r\n      const peekactors : string[] = actors;\r\n      peekactors[section + 1] = correct[section + 2];\r\n      setActors(peekactors);\r\n      // console.log(actors);\r\n    } else {\r\n      // if not we lost, solved is true\r\n      setSolved(true);\r\n      // record that we missed\r\n      data[6] = (parseInt(data[6]) + 1).toString();\r\n      // set streak to 0\r\n      data[7] = '0';\r\n      setStreak(0);\r\n      // similar as before\r\n      setPlayed(played + 1);\r\n      data[17] = date;\r\n      document.cookie = `data=${encodeURIComponent(\r\n        data.join('//')\r\n      )}; expires=Tue, 19 Jan 2038 03:14:07 GMT;`;\r\n      setSuccessRate(outsideWon / (played + 1));\r\n      setTimeout(() => {\r\n        const curTimeLeft : number = tomorrow.getTime() - new Date().getTime();\r\n        setSecondsLeft(Math.floor(curTimeLeft / 1000) % 60);\r\n        setMinutesLeft(Math.floor(curTimeLeft / (1000 * 60)) % 60);\r\n        setHoursLeft(Math.floor(curTimeLeft / (1000 * 60 * 60)) % 24);\r\n        setStatsVisible(true);\r\n      }, 1000);\r\n    }\r\n    setBools(peekBools);\r\n  }\r\n\r\n  return (\r\n    <TopLevel>\r\n      <Modal\r\n        show={rulesVisible}\r\n        onHide={() => {\r\n          setRulesVisible(false);\r\n        }}\r\n      >\r\n        <ModalBody className={darkMode ? 'darklv5' : 'lightcolors'}>\r\n          <div style={{margin: 'auto'}} className={`${darkMode ? 'darklv5' : 'lightcolors'}`}>\r\n            <div style={{ fontSize: height / 50, textAlign: 'right', cursor: 'pointer' }} onClick={() => {\r\n              setRulesVisible(false);\r\n            }}>X</div>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              } bold`}\r\n            >\r\n              HOW TO PLAY\r\n            </RulesText>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              Guess the <ModalLogo>S T A R D L E</ModalLogo> in six\r\n              tries.\r\n            </RulesText>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              Enter your guesses into the boxes below the actors.\r\n            </RulesText>\r\n            <Actor\r\n              style={{marginLeft: width / 50, marginRight: width / 50}}\r\n              className={`${darkMode ? 'darklv1' : 'lightcolors'}`}\r\n            >\r\n              Tom Hanks\r\n            </Actor>\r\n            <Actor\r\n              style={{ animation: 'none', marginLeft: width / 50, marginRight: width / 50}}\r\n              className={`${darkMode ? 'darklv2' : 'lightcolors'}`}\r\n            />\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              Guess by pressing a movie title suggested by the text box.\r\n            </RulesText>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              After each guess the game reveals another actor and the color of the previous text box will change to show how\r\n              close your title is to the STARDLE.\r\n            </RulesText>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              If a guess is correct, you win.\r\n            </RulesText>\r\n            <RulesAboveInput style={green} className='modalactor'>\r\n              <div className='textinput blacktext' style={{textAlign: 'center'}}>Toy Story 4</div>\r\n            </RulesAboveInput>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              If a guess has words in common with the Stardle:\r\n            </RulesText>\r\n            <RulesAboveInput style={yellow} className='modalactor'>\r\n              <div className='textinput blacktext' style={{textAlign: 'center'}}>Toy Story 3</div>\r\n            </RulesAboveInput>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              If a guess has no words in common with the Stardle:\r\n            </RulesText>\r\n            <RulesAboveInput style={gray} className='modalactor'>\r\n              <div className='textinput blacktext' style={{textAlign: 'center'}}>Cast Away</div>\r\n            </RulesAboveInput>\r\n            <RulesText\r\n              className={`${\r\n                darkMode ? 'darklv5' : 'lightcolors'\r\n              }`}\r\n            >\r\n              A new Stardle will be available every day.\r\n            </RulesText>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal\r\n        show={statsVisible}\r\n        onHide={() => {\r\n          setStatsVisible(false);\r\n        }}\r\n      >\r\n        <ModalBody className={darkMode ? 'darklv5' : 'lightcolors'}>\r\n          <div style={{ margin: 'auto' }} className={`${darkMode ? 'darklv5' : 'lightcolors'}`}>\r\n            <div style={{ fontSize: height / 50, textAlign: 'right', cursor: 'pointer' }} onClick={() => {\r\n              setStatsVisible(false);\r\n            }}>X</div>\r\n            <div\r\n              className={darkMode ? 'darklv5' : 'lightcolors'}\r\n              style={{ fontSize: height / 50, textAlign: 'center' }}\r\n            >\r\n              {solved ? 'The answer was' : ''}\r\n            </div>\r\n            <div\r\n              className={darkMode ? 'darklv5' : 'lightcolors'}\r\n              style={{\r\n                fontSize: height / 30,\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              {solved ? correct[0].toUpperCase() : ''}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: 'grid',\r\n                gridTemplateColumns: '1fr 1fr 1fr 1fr',\r\n                width: '100%',\r\n                marginBottom: height / 50,\r\n              }}\r\n            >\r\n              <StatTitle>Played</StatTitle>\r\n              <StatTitle>Success Rate</StatTitle>\r\n              <StatTitle>Streak</StatTitle>\r\n              <StatTitle>Max Streak</StatTitle>\r\n              <Stat>{played}</Stat>\r\n              <Stat>{Math.trunc(successRate * 100)}%</Stat>\r\n              <Stat>{streak}</Stat>\r\n              <Stat>{maxStreak}</Stat>\r\n            </div>\r\n            <div\r\n              style={{ textAlign: 'center', fontSize: height / 40 }}\r\n              className='bold'\r\n            >\r\n              GUESS DISTRIBUTION\r\n            </div>\r\n            <div style={{ display: 'grid', gridTemplateColumns: '5fr 95fr' }}>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    fontSize: height / 50,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                >\r\n                  1\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    fontSize: height / 50,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                >\r\n                  2\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    fontSize: height / 50,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                >\r\n                  3\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    fontSize: height / 50,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                >\r\n                  4\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    fontSize: height / 50,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                >\r\n                  5\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    fontSize: height / 50,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                >\r\n                  6\r\n                </div>\r\n              </div>\r\n              <div style={{}}>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: '#77D353',\r\n                    width:\r\n                      (parseInt(data[0]) / maxAttempts) * relevantGraphWidth,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    backgroundColor: '#77D353',\r\n                    width:\r\n                      (parseInt(data[1]) / maxAttempts) * relevantGraphWidth,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    backgroundColor: '#FFD185',\r\n                    width:\r\n                      (parseInt(data[2]) / maxAttempts) * relevantGraphWidth,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    backgroundColor: '#FFD185',\r\n                    width:\r\n                      (parseInt(data[3]) / maxAttempts) * relevantGraphWidth,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    backgroundColor: 'lightgray',\r\n                    width:\r\n                      (parseInt(data[4]) / maxAttempts) * relevantGraphWidth,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    backgroundColor: 'lightgray',\r\n                    width:\r\n                      (parseInt(data[5]) / maxAttempts) * relevantGraphWidth,\r\n                    height: height / 40,\r\n                    marginTop: height / 100,\r\n                    marginBottom: height / 100,\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div style={{ textAlign: 'center', fontSize: height / 50 }}>\r\n              Next STARDLE in\r\n            </div>\r\n            <div style={{ textAlign: 'center', fontSize: height / 40 }}>\r\n              {getstrTimeLeft(hoursLeft)}:{getstrTimeLeft(minutesLeft)}:\r\n              {getstrTimeLeft(secondsLeft)}\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal\r\n        show={aboutVisible}\r\n        onHide={() => {\r\n          setAboutVisible(false);\r\n        }}\r\n      >\r\n        <ModalBody className={darkMode ? 'darklv5' : 'lightcolors'}>\r\n          <div style={{ fontSize: height / 50, textAlign: 'right', cursor: 'pointer' }} onClick={() => {\r\n              setAboutVisible(false);\r\n            }}>X</div>\r\n          <div>\r\n            Made by Nick Green{' '}\r\n            <a href='http://nickgreensf.com'>(nickgreensf.com)</a>\r\n          </div>\r\n          <div>Based on Wordle</div>\r\n          <div>Movie data from Wikipedia</div>\r\n        </ModalBody>\r\n      </Modal>\r\n      <MyNavbar className={darkMode ? 'darklv2' : 'lightcolors'}>\r\n        <NavbarText\r\n          onClick={() => {\r\n            setRulesVisible(true);\r\n          }}\r\n        >\r\n          RULES\r\n        </NavbarText>\r\n        <NavbarText\r\n          style={{ left: width * 0.2 }}\r\n          onClick={() => {\r\n            const curTimeLeft : number = tomorrow.getTime() - new Date().getTime();\r\n            setSecondsLeft(Math.floor(curTimeLeft / 1000) % 60);\r\n            setMinutesLeft(Math.floor(curTimeLeft / (1000 * 60)) % 60);\r\n            setHoursLeft(Math.floor(curTimeLeft / (1000 * 60 * 60)) % 24);\r\n            setStatsVisible(true);\r\n          }}\r\n        >\r\n          STATS\r\n        </NavbarText>\r\n        <Logo style={{ left: width * 0.4 }}>S T A R D L E</Logo>\r\n        <NavbarText\r\n          style={{ left: width * 0.8 }}\r\n          onClick={() => {\r\n            // when we set the darkmode toggle, we also have to set classname for the body\r\n            if (darkMode) {\r\n              document.body.classList.add('white');\r\n              data[16] = 'false';\r\n            } else {\r\n              document.body.classList.remove('white');\r\n              data[16] = 'true';\r\n            }\r\n            console.log(darkMode);\r\n            document.cookie = `data=${encodeURIComponent(\r\n              data.join('//')\r\n            )}; expires=Tue, 19 Jan 2038 03:14:07 GMT;`;\r\n            setDarkMode(!darkMode);\r\n            // console.log(document.cookie)\r\n          }}\r\n        >\r\n          DARKMODE\r\n        </NavbarText>\r\n        <NavbarText\r\n          style={{ left: width * 0.6 }}\r\n          onClick={() => {\r\n            setAboutVisible(true);\r\n          }}\r\n        >\r\n          ABOUT\r\n        </NavbarText>\r\n      </MyNavbar>\r\n      <HoverButton\r\n        className={`hover shortwidth ${darkMode ? 'darklv5 ' : 'lightcolors '}${\r\n          hoverDisplays[0] ? '' : 'none'\r\n        }`}\r\n        style={curHoverLocations[0]}\r\n        onClick={() => guess(active * 3)}\r\n      >\r\n        <HoverText className={darkMode ? 'darklv5' : 'lightcolors'}>\r\n          {hoverSpans[0]}\r\n        </HoverText>\r\n      </HoverButton>\r\n      <HoverButton\r\n        className={`hover shortwidth ${darkMode ? 'darklv5 ' : 'lightcolors '}${\r\n          hoverDisplays[1] ? '' : 'none'\r\n        }`}\r\n        style={curHoverLocations[1]}\r\n        onClick={() => guess(1 + active * 3)}\r\n      >\r\n        <HoverText className={darkMode ? 'darklv5' : 'lightcolors'}>\r\n          {hoverSpans[1]}\r\n        </HoverText>\r\n      </HoverButton>\r\n      <HoverButton\r\n        className={`hover shortwidth ${darkMode ? 'darklv5 ' : 'lightcolors '}${\r\n          hoverDisplays[2] ? '' : 'none'\r\n        }`}\r\n        style={curHoverLocations[2]}\r\n        onClick={() => guess(2 + active * 3)}\r\n      >\r\n        <HoverText className={darkMode ? 'darklv5' : 'lightcolors'}>\r\n          {hoverSpans[2]}\r\n        </HoverText>\r\n      </HoverButton>\r\n      <Puzzle>\r\n        <Spot>\r\n          <Actor className={darkMode ? 'darklv2' : 'lightcolors'}>\r\n            {actors[0]}\r\n          </Actor>\r\n          <Input\r\n            className={`${bools[0] ? '' : 'none '}textinput ${\r\n              darkMode ? 'darklv2' : 'lightcolors'\r\n            }`}\r\n            onChange={(e) => {\r\n              textHandler(e.target.value, 0);\r\n            }}\r\n          />\r\n          <AboveInput style={bools[0] ? none : guessStyles[0]}>\r\n            <div className='blacktext'>\r\n              {guessSpans[0].length > 1 ? guessSpans[0] : ''}\r\n            </div>\r\n          </AboveInput>\r\n        </Spot>\r\n        <Spot>\r\n          <Hider\r\n            className={(() => {\r\n              if (actors[1].length > 1) {\r\n                return 'none';\r\n              }\r\n              if (darkMode) {\r\n                return 'darklv4';\r\n              }\r\n              return 'black';\r\n            }).call(undefined)}\r\n          />\r\n          <Actor\r\n            className={\r\n              (actors[1].length > 1 ? '' : 'none ') +\r\n              (darkMode ? 'darklv2' : 'lightcolors')\r\n            }\r\n          >\r\n            {actors[1]}\r\n          </Actor>\r\n          <Input\r\n            className={`${bools[1] ? '' : 'none '}textinput ${\r\n              darkMode ? 'darklv2' : 'lightcolors'\r\n            }`}\r\n            onChange={(e) => {\r\n              textHandler(e.target.value, 1);\r\n            }}\r\n          />\r\n          <AboveInput style={bools[1] ? none : guessStyles[1]}>\r\n            <div className='blacktext'>\r\n              {guessSpans[1].length > 1 ? guessSpans[1] : ''}\r\n            </div>\r\n          </AboveInput>\r\n        </Spot>\r\n        <Spot>\r\n          <Hider\r\n            className={(() => {\r\n              if (actors[2].length > 1) {\r\n                return 'none';\r\n              }\r\n              if (darkMode) {\r\n                return 'darklv4';\r\n              }\r\n              return 'black';\r\n            }).call(undefined)}\r\n          />\r\n          <Actor\r\n            className={\r\n              (actors[2].length > 1 ? '' : 'none ') +\r\n              (darkMode ? 'darklv2' : 'lightcolors')\r\n            }\r\n          >\r\n            {actors[2]}\r\n          </Actor>\r\n          <Input\r\n            className={`${bools[2] ? '' : 'none '}textinput ${\r\n              darkMode ? 'darklv2' : 'lightcolors'\r\n            }`}\r\n            onChange={(e) => {\r\n              textHandler(e.target.value, 2);\r\n            }}\r\n          />\r\n          <AboveInput style={bools[2] ? none : guessStyles[2]}>\r\n            <div className='blacktext'>\r\n              {guessSpans[2].length > 1 ? guessSpans[2] : ''}\r\n            </div>\r\n          </AboveInput>\r\n        </Spot>\r\n        <Spot>\r\n          <Hider\r\n            className={(() => {\r\n              if (actors[3].length > 1) {\r\n                return 'none';\r\n              }\r\n              if (darkMode) {\r\n                return 'darklv4';\r\n              }\r\n              return 'black';\r\n            }).call(undefined)}\r\n          />\r\n          <Actor\r\n            className={\r\n              (actors[3].length > 1 ? '' : 'none ') +\r\n              (darkMode ? 'darklv2' : 'lightcolors')\r\n            }\r\n          >\r\n            {actors[3]}\r\n          </Actor>\r\n          <Input\r\n            className={`${bools[3] ? '' : 'none '}textinput ${\r\n              darkMode ? 'darklv2' : 'lightcolors'\r\n            }`}\r\n            onChange={(e) => {\r\n              textHandler(e.target.value, 3);\r\n            }}\r\n          />\r\n          <AboveInput style={bools[3] ? none : guessStyles[3]}>\r\n            <div className='blacktext'>\r\n              {guessSpans[3].length > 1 ? guessSpans[3] : ''}\r\n            </div>\r\n          </AboveInput>\r\n        </Spot>\r\n        <Spot>\r\n          <Hider\r\n            className={(() => {\r\n              if (actors[4].length > 1) {\r\n                return 'none';\r\n              }\r\n              if (darkMode) {\r\n                return 'darklv4';\r\n              }\r\n              return 'black';\r\n            }).call(undefined)}\r\n          />\r\n          <Actor\r\n            className={\r\n              (actors[4].length > 1 ? '' : 'none ') +\r\n              (darkMode ? 'darklv2' : 'lightcolors')\r\n            }\r\n          >\r\n            {actors[4]}\r\n          </Actor>\r\n          <Input\r\n            className={`${bools[4] ? '' : 'none '}textinput ${\r\n              darkMode ? 'darklv2' : 'lightcolors'\r\n            }`}\r\n            onChange={(e) => {\r\n              textHandler(e.target.value, 4);\r\n            }}\r\n          />\r\n          <AboveInput style={bools[4] ? none : guessStyles[4]}>\r\n            <div className='blacktext'>\r\n              {guessSpans[4].length > 1 ? guessSpans[4] : ''}\r\n            </div>\r\n          </AboveInput>\r\n        </Spot>\r\n        <Spot>\r\n          <Hider\r\n            className={\r\n              // actors[5].length > 1 ? 'none' : darkMode ? ' darklv4' : ' black'\r\n              (() => {\r\n                if (actors[5].length > 1) {\r\n                  return 'none';\r\n                }\r\n                if (darkMode) {\r\n                  return 'darklv4';\r\n                }\r\n                return 'black';\r\n              }).call(undefined)\r\n            }\r\n          />\r\n          <Actor\r\n            className={\r\n              (actors[5].length > 1 ? '' : 'none ') +\r\n              (darkMode ? 'darklv2' : 'lightcolors')\r\n            }\r\n          >\r\n            {actors[5]}\r\n          </Actor>\r\n          <Input\r\n            className={`${bools[5] ? '' : 'none '}textinput ${\r\n              darkMode ? 'darklv2' : 'lightcolors'\r\n            }`}\r\n            onChange={(e) => {\r\n              textHandler(e.target.value, 5);\r\n            }}\r\n          />\r\n          <AboveInput style={bools[5] ? none : guessStyles[5]}>\r\n            <div className='blacktext'>\r\n              {guessSpans[5].length > 1 ? guessSpans[5] : ''}\r\n            </div>\r\n          </AboveInput>\r\n        </Spot>\r\n      </Puzzle>\r\n    </TopLevel>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}