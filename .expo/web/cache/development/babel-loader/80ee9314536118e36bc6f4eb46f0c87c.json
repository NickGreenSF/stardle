{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blarg\\\\Documents\\\\stardle\\\\Puzzle.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { View, TouchableOpacity, Text } from \"./components/Themed\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport HiddenText from \"react-native-web/dist/exports/TextInput\";\nvar mockdata = [\"Harry Potter and the Half-Blood Prince\", \"Daniel Radcliffe\", \"Rupert Grint\", \"Emma Watson\", \"Helena Bonham Carter\", \"Robbie Coltrane\", \"Warwick Davis\"];\nexport default function Puzzle() {\n  function keyHandler(key) {\n    inputRef.current.focus();\n    console.log(key);\n  }\n\n  var inputRef = useRef(null);\n  useEffect(function () {\n    inputRef.current && inputRef.current.focus();\n  }, []);\n  return React.createElement(View, {\n    onClick: function onClick() {\n      inputRef.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }, React.createElement(HiddenText, {\n    ref: inputRef,\n    style: {\n      width: 0,\n      height: 0\n    },\n    onKeyPress: function onKeyPress(e) {\n      if (e.keyCode == 9 || e.keyCode == 13) {\n        e.preventDefault();\n      }\n\n      keyHandler(e.key);\n      inputRef.current && inputRef.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return keyHandler(\"q\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Q\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return keyHandler(\"w\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"W\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return keyHandler(\"e\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"E\")));\n}\nvar styles = StyleSheet.create({\n  text: {\n    margin: 5\n  },\n  container: {\n    alignContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/blarg/Documents/stardle/Puzzle.tsx"],"names":["React","useEffect","useRef","View","TouchableOpacity","Text","mockdata","Puzzle","keyHandler","key","inputRef","current","focus","console","log","width","height","e","keyCode","preventDefault","styles","text","StyleSheet","create","margin","container","alignContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAA0BC,gBAA1B,EAA4CC,IAA5C;;;AAGA,IAAIC,QAAwB,GAAG,CAC3B,wCAD2B,EAE3B,kBAF2B,EAG3B,cAH2B,EAI3B,aAJ2B,EAK3B,sBAL2B,EAM3B,iBAN2B,EAO3B,eAP2B,CAA/B;AAYA,eAAe,SAASC,MAAT,GAAmB;AAC9B,WAASC,UAAT,CAAoBC,GAApB,EAAgC;AAC5BC,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH;;AAED,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ,CAACC,OAAT,IAAoBD,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,EAApB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,mBAAM;AAACF,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AAAyB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEF,QAAjB;AAA2B,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAlC;AAAyD,IAAA,UAAU,EAAE,oBAACC,CAAD,EAAO;AAExE,UAAIA,CAAC,CAACC,OAAF,IAAa,CAAb,IAAkBD,CAAC,CAACC,OAAF,IAAa,EAAnC,EAAsC;AAClCD,QAAAA,CAAC,CAACE,cAAF;AACH;;AACDX,MAAAA,UAAU,CAACS,CAAC,CAACR,GAAH,CAAV;AACAC,MAAAA,QAAQ,CAACC,OAAT,IAAoBD,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,EAApB;AACH,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EASH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATG,EAUH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMb,UAAU,CAAC,GAAD,CAAhB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CAVG,EAaH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMA,UAAU,CAAC,GAAD,CAAhB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CAbG,EAgBH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMA,UAAU,CAAC,GAAD,CAAhB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CAhBG,CAAP;AAoBH;AAED,IAAMY,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,IAAI,EAAE;AACFG,IAAAA,MAAM,EAAE;AADN,GADuB;AAI7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE;AADP;AAJkB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { View, TextInput, TouchableOpacity, Text } from \"./components/Themed\"\r\nimport { StyleSheet, TextInput as HiddenText } from 'react-native'\r\n\r\nlet mockdata : Array<String> = [\r\n    \"Harry Potter and the Half-Blood Prince\",\r\n    \"Daniel Radcliffe\",\r\n    \"Rupert Grint\",\r\n    \"Emma Watson\",\r\n    \"Helena Bonham Carter\",\r\n    \"Robbie Coltrane\",\r\n    \"Warwick Davis\"\r\n]\r\n\r\n\r\n\r\nexport default function Puzzle () {\r\n    function keyHandler(key: string){\r\n        inputRef.current.focus()\r\n        console.log(key)\r\n    }\r\n\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n        inputRef.current && inputRef.current.focus();\r\n    }, []);\r\n\r\n    return <View onClick={() => {inputRef.current.focus()}}>\r\n        <HiddenText ref={inputRef} style={{width: 0, height: 0}} onKeyPress={(e) => {\r\n            // used to prevent from losing focus on pressing Tab or Enter\r\n            if (e.keyCode == 9 || e.keyCode == 13){\r\n                e.preventDefault();\r\n            }\r\n            keyHandler(e.key);\r\n            inputRef.current && inputRef.current.focus();\r\n        }}></HiddenText>\r\n        <View style={styles.text}></View>\r\n        <TouchableOpacity onPress={() => keyHandler(\"q\")}>\r\n            <Text>Q</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => keyHandler(\"w\")}>\r\n            <Text>W</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => keyHandler(\"e\")}>\r\n            <Text>E</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        margin: 5,\r\n    },\r\n    container: {\r\n        alignContent: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}