{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\blarg\\\\Documents\\\\stardle\\\\Puzzle.tsx\";\nimport React, { useState, useRef } from 'react';\nimport { View, TextInput, TouchableOpacity, Text } from \"./components/Themed\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DefaultInput from \"react-native-web/dist/exports/TextInput\";\nimport Data from \"./constants/Data\";\nconsole.log(Object.keys(Data));\nvar filmmockdata = Object.keys(Data);\nexport default function Puzzle() {\n  var holdoverdata = filmmockdata;\n  var peekdisplays;\n  var peektexts;\n  var peekoldtexts;\n  var correct = Data['harry potter and the half blood prince'];\n  console.log(correct);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      booltest = _useState2[0],\n      setBooltest = _useState2[1];\n\n  var _useState3 = useState([true, true, true, true, true, true]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bools = _useState4[0],\n      setBools = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      oldText = _useState6[0],\n      setOldText = _useState6[1];\n\n  var _useState7 = useState(['', '', '', '', '', '']),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newoldtext = _useState8[0],\n      setnewoldtext = _useState8[1];\n\n  var _useState9 = useState([\"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\"]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      displays = _useState10[0],\n      setDisplays = _useState10[1];\n\n  var _useState11 = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      texts = _useState12[0],\n      setTexts = _useState12[1];\n\n  var _useState13 = useState([correct[1], \"_\", \"_\", \"_\", \"_\", \"_\"]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      actors = _useState14[0],\n      setActors = _useState14[1];\n\n  var _useState15 = useState([\"\", \"\", \"\", \"\", \"\", \"\"]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      guessTexts = _useState16[0],\n      setGuessTexts = _useState16[1];\n\n  var inputRefs = [useRef(null), useRef(null), useRef(null), useRef(null), useRef(null), useRef(null)];\n\n  function textHandler(text, column) {\n    var newData = [];\n\n    for (var i = 0; i < holdoverdata.length; i += 1) {\n      if (holdoverdata[i].includes(text.toLowerCase())) {\n        newData.push(holdoverdata[i]);\n      }\n    }\n\n    setOldText(text);\n    console.log(oldText);\n    holdoverdata = newData;\n\n    if (text.length < newoldtext[column].length) {\n      peektexts = texts;\n\n      for (var _i = column * 3; _i < Math.min((column + 1) * 3, column * 3 + newData.length); _i += 1) {\n        peektexts[_i] = \"\";\n      }\n\n      setTexts(peektexts);\n      holdoverdata = filmmockdata;\n      peekdisplays = displays;\n\n      for (var _i2 = column * 3; _i2 < (column + 1) * 3; _i2 += 1) {\n        peekdisplays[_i2] = \"none\";\n      }\n\n      setDisplays(peekdisplays);\n    } else {\n      peektexts = texts;\n\n      for (var _i3 = column * 3; _i3 < Math.min((column + 1) * 3, column * 3 + newData.length); _i3 += 1) {\n        peektexts[_i3] = Data[newData[_i3 - column * 3]][0];\n      }\n\n      setTexts(peektexts);\n      peekdisplays = displays;\n\n      for (var _i4 = column * 3; _i4 < (column + 1) * 3; _i4 += 1) {\n        if (_i4 - column * 3 < newData.length) {\n          peekdisplays[_i4] = \"flex\";\n        } else {\n          peekdisplays[_i4] = \"none\";\n        }\n      }\n\n      setDisplays(peekdisplays);\n    }\n\n    peekoldtexts = newoldtext;\n    newoldtext[column] = text;\n    setnewoldtext(peekoldtexts);\n  }\n\n  function guess(box) {\n    if (texts[box] == correct[0]) {\n      console.log(\"winner!\");\n    }\n\n    var section = Math.floor(box / 3);\n    var peekbools = bools;\n    peekbools[section] = false;\n    setBools(peekbools);\n    var peekguesstexts = guessTexts;\n    peekguesstexts[section] = texts[box];\n    setGuessTexts(peekguesstexts);\n\n    if (box < 15) {\n      var peekactors = actors;\n      peekactors[section + 1] = correct[section + 2];\n      setActors(peekactors);\n      console.log(actors);\n    }\n\n    textHandler(\"\", section);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, actors[0]), React.createElement(DefaultInput, {\n    ref: inputRefs[0],\n    style: bools[0] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[0] ? styles.none : styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, guessTexts[0])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, texts[0])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, texts[1])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, texts[2])), React.createElement(Text, {\n    style: actors[1].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, actors[1]), React.createElement(DefaultInput, {\n    ref: inputRefs[1],\n    style: bools[1] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[1] ? styles.none : styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, guessTexts[1])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, texts[3])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, texts[4])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, texts[5])), React.createElement(Text, {\n    style: actors[2].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, actors[2]), React.createElement(TextInput, {\n    style: bools[2] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[2] ? styles.none : styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, guessTexts[2])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(6);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, texts[6])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(7);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, texts[7])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(8);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, texts[8])), React.createElement(Text, {\n    style: actors[3].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, actors[3]), React.createElement(TextInput, {\n    style: bools[3] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[3] ? styles.none : styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, guessTexts[3])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(9);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, texts[9])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, texts[10])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(11);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, texts[11])), React.createElement(Text, {\n    style: actors[4].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, actors[4]), React.createElement(TextInput, {\n    style: bools[4] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[4] ? styles.none : styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, guessTexts[4])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(12);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, texts[12])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(13);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, texts[13])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(14);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, texts[14])), React.createElement(Text, {\n    style: actors[5].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, actors[5]), React.createElement(TextInput, {\n    style: bools[5] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[5] ? styles.none : styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, guessTexts[5])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(15);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, texts[15])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(16);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, texts[16])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(17);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, texts[17])));\n}\nvar styles = StyleSheet.create({\n  text: {\n    margin: 5\n  },\n  container: {\n    alignContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"black\"\n  },\n  none: {\n    display: 'none'\n  },\n  black: {\n    backgroundColor: \"black\"\n  },\n  hover: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["C:/Users/blarg/Documents/stardle/Puzzle.tsx"],"names":["React","useState","useRef","View","TextInput","TouchableOpacity","Text","Data","console","log","Object","keys","filmmockdata","Puzzle","holdoverdata","peekdisplays","peektexts","peekoldtexts","correct","booltest","setBooltest","bools","setBools","oldText","setOldText","newoldtext","setnewoldtext","displays","setDisplays","texts","setTexts","actors","setActors","guessTexts","setGuessTexts","inputRefs","textHandler","text","column","newData","i","length","includes","toLowerCase","push","Math","min","guess","box","section","floor","peekbools","peekguesstexts","peekactors","styles","input","none","e","target","value","hover","black","StyleSheet","create","margin","container","alignContent","borderWidth","borderColor","display","backgroundColor","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { View, TextInput, TouchableOpacity, Text } from \"./components/Themed\"\r\nimport { StyleSheet, TextInput as DefaultInput } from 'react-native'\r\nimport Data from \"./constants/Data\"\r\n\r\nconsole.log(Object.keys(Data))\r\n\r\nconst filmmockdata : Array<string> = Object.keys(Data)\r\n\r\nexport default function Puzzle () {\r\n    // function keyHandler(key: string, keyCode: number){\r\n    //     inputRef.current.focus()\r\n    //     console.log(key)\r\n    //     if (key.length === 1 && /[a-zA-Z ]/.test(key)){\r\n    //         console.log(\"etter\")\r\n    //         setTextOne(textOne + key)\r\n    //     }\r\n    //     else if (key === \"Backspace\" && textOne.length > 0){\r\n    //         setTextOne(textOne.substring(0, textOne.length - 1))\r\n    //     }\r\n    // }\r\n\r\n    // const [textOne, setTextOne] = useState(\"\")\r\n\r\n    // const inputRef = useRef(null);\r\n    // useEffect(() => {\r\n    //     inputRef.current && inputRef.current.focus();\r\n    // }, []);\r\n\r\n    // // \r\n    // <HiddenText ref={inputRef} style={{width: 0, height: 0}} onKeyPress={(e) => {\r\n    //     // used to prevent from losing focus on pressing Tab or Enter\r\n    //     if (e.keyCode === 9 || e.keyCode === 13 || e.key === \"Alt\"){\r\n    //         e.preventDefault();\r\n    //     }\r\n    //     keyHandler(e.key);\r\n    //     inputRef.current && inputRef.current.focus();\r\n    // }}></HiddenText>\r\n    \r\n//     <TouchableOpacity onPress={() => keyHandler(\"q\")}>\r\n//     <Text>Q</Text>\r\n// </TouchableOpacity>\r\n// <TouchableOpacity onPress={() => keyHandler(\"w\")}>\r\n//     <Text>W</Text>\r\n// </TouchableOpacity>\r\n// <TouchableOpacity onPress={() => keyHandler(\"e\")}>\r\n//     <Text>E</Text>\r\n// </TouchableOpacity>\r\n\r\n    let holdoverdata = filmmockdata;\r\n    let peekdisplays;\r\n    let peektexts;\r\n    let peekoldtexts;\r\n\r\n    let correct = Data['harry potter and the half blood prince'];\r\n    console.log(correct)\r\n\r\n    const [booltest, setBooltest] = useState(true);\r\n    const [bools, setBools] = useState([true, true, true, true, true, true])\r\n\r\n    const [oldText, setOldText] = useState('')\r\n    const [newoldtext, setnewoldtext] = useState(['','','','','',''])\r\n    const [displays, setDisplays] = useState([\r\n        \"none\",\"none\",\"none\",\r\n        \"none\",\"none\",\"none\",\r\n        \"none\",\"none\",\"none\",\r\n        \"none\",\"none\",\"none\",\r\n        \"none\",\"none\",\"none\",\r\n        \"none\",\"none\",\"none\"])\r\n    const [texts, setTexts] = useState([\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\"])\r\n    const [actors, setActors] = useState([correct[1],\"_\",\"_\",\"_\",\"_\",\"_\"])\r\n    const [guessTexts, setGuessTexts] = useState([\"\",\"\",\"\",\"\",\"\",\"\"])\r\n\r\n    const inputRefs = [useRef(null), useRef(null), useRef(null), useRef(null), useRef(null), useRef(null)]\r\n\r\n    function textHandler(text: string, column: number){\r\n        let newData = [];\r\n        for (let i = 0; i < holdoverdata.length; i += 1){\r\n            if (holdoverdata[i].includes(text.toLowerCase())){\r\n                newData.push(holdoverdata[i]);\r\n            }\r\n        }\r\n        \r\n        // if this isn't here the text updates don't work. i have no idea why this is.\r\n        setOldText(text);\r\n        console.log(oldText);\r\n        holdoverdata = newData;\r\n        //console.log(holdoverdata);\r\n        if (text.length < newoldtext[column].length){\r\n            peektexts = texts;\r\n            for (let i = (column * 3); i < Math.min((column + 1) * 3, (column * 3) + newData.length); i += 1){\r\n                peektexts[i] = \"\";\r\n            }\r\n            setTexts(peektexts);\r\n            holdoverdata = filmmockdata;\r\n            peekdisplays = displays;\r\n            for (let i = column * 3; i < (column + 1) * 3; i += 1){\r\n                peekdisplays[i] = \"none\";\r\n            }\r\n            setDisplays(peekdisplays);\r\n        }\r\n        else{\r\n            peektexts = texts;\r\n            for (let i = (column * 3); i < Math.min((column + 1) * 3, (column * 3) + newData.length); i += 1){\r\n                peektexts[i] = Data[newData[i - (column * 3)]][0];\r\n            }\r\n            setTexts(peektexts);\r\n            peekdisplays = displays;\r\n            for (let i = column * 3; i < (column + 1) * 3; i += 1){\r\n                if (i - (column * 3) < newData.length){\r\n                    peekdisplays[i] = \"flex\";\r\n                }\r\n                else{\r\n                    peekdisplays[i] = \"none\";\r\n                }\r\n            }\r\n            setDisplays(peekdisplays);\r\n        }\r\n\r\n        peekoldtexts = newoldtext;\r\n        newoldtext[column] = text;\r\n        setnewoldtext(peekoldtexts);\r\n        // now we need to know where we are in the chain of command so we can render 3 suggestion boxes under.\r\n    }\r\n\r\n    function guess(box: number){\r\n        //setBooltest(false);\r\n        if (texts[box] == correct[0]){\r\n            console.log(\"winner!\");\r\n        }\r\n        let section = Math.floor(box / 3);\r\n        let peekbools = bools;\r\n        peekbools[section] = false;\r\n        setBools(peekbools);\r\n        let peekguesstexts = guessTexts;\r\n        peekguesstexts[section] = texts[box];\r\n        setGuessTexts(peekguesstexts);\r\n        if (box < 15){\r\n            let peekactors = actors;\r\n            peekactors[section + 1] = correct[section + 2];\r\n            setActors(peekactors);\r\n            console.log(actors);\r\n        }\r\n        textHandler(\"\", section);\r\n    }\r\n\r\n    return <View>\r\n        <Text>{actors[0]}</Text>\r\n        <DefaultInput \r\n            ref={inputRefs[0]} style={bools[0] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 0)}}>\r\n        </DefaultInput>\r\n        <View style={bools[0] ? styles.none : styles.input}>\r\n            <Text>{guessTexts[0]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(0)}>\r\n            <Text>{texts[0]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(1)}>\r\n            <Text>{texts[1]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(2)}>\r\n            <Text>{texts[2]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[1].length > 1 ? null : styles.black}>{actors[1]}</Text>\r\n        <DefaultInput \r\n            ref={inputRefs[1]} style={bools[1] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 1)}}>\r\n        </DefaultInput>\r\n        <View style={bools[1] ? styles.none : styles.input}>\r\n            <Text>{guessTexts[1]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(3)}>\r\n            <Text>{texts[3]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(4)}>\r\n            <Text>{texts[4]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(5)}>\r\n            <Text>{texts[5]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[2].length > 1 ? null : styles.black}>{actors[2]}</Text>\r\n        <TextInput style={bools[2] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 2)}}></TextInput>\r\n        <View style={bools[2] ? styles.none : styles.input}>\r\n            <Text>{guessTexts[2]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(6)}>\r\n            <Text>{texts[6]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(7)}>\r\n            <Text>{texts[7]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(8)}>\r\n            <Text>{texts[8]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[3].length > 1 ? null : styles.black}>{actors[3]}</Text>\r\n        <TextInput style={bools[3] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 3)}}></TextInput>\r\n        <View style={bools[3] ? styles.none : styles.input}>\r\n            <Text>{guessTexts[3]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(9)}>\r\n            <Text>{texts[9]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(10)}>\r\n            <Text>{texts[10]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(11)}>\r\n            <Text>{texts[11]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[4].length > 1 ? null : styles.black}>{actors[4]}</Text>\r\n        <TextInput style={bools[4] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 4)}}></TextInput>\r\n        <View style={bools[4] ? styles.none : styles.input}>\r\n            <Text>{guessTexts[4]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(12)}>\r\n            <Text>{texts[12]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(13)}>\r\n            <Text>{texts[13]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(14)}>\r\n            <Text>{texts[14]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[5].length > 1 ? null : styles.black}>{actors[5]}</Text>\r\n        <TextInput style={bools[5] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 5)}}></TextInput>\r\n        <View style={bools[5] ? styles.none : styles.input}>\r\n            <Text>{guessTexts[5]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(15)}>\r\n            <Text>{texts[15]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(16)}>\r\n            <Text>{texts[16]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(17)}>\r\n            <Text>{texts[17]}</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        margin: 5,\r\n    },\r\n    container: {\r\n        alignContent: 'center'\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\"\r\n    },\r\n    none: {\r\n        display: 'none'\r\n    },\r\n    black: {\r\n        backgroundColor: \"black\"\r\n    },\r\n    hover: {\r\n        overflow: 'hidden'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}