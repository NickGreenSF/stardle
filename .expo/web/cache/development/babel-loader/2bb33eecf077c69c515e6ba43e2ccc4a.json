{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\blarg\\\\Documents\\\\stardle\\\\Puzzle.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Data from \"./constants/Data\";\nimport PointlessWords from \"./constants/PointlessWords\";\nconsole.log(Object.keys(Data));\nvar filmmockdata = Object.keys(Data);\nexport default function Puzzle() {\n  var holdoverdata = filmmockdata;\n  var peekTexts;\n  var peekOldTexts;\n  var peekGuessStyles;\n  var peekBools;\n  var peekGuessTexts;\n  var peekHoverTexts;\n\n  var _useState = useState(Data[filmmockdata[Math.floor(Math.random() * filmmockdata.length)]]),\n      _useState2 = _slicedToArray(_useState, 1),\n      correct = _useState2[0];\n\n  console.log(correct);\n\n  var _useState3 = useState([true, false, false, false, false, false]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bools = _useState4[0],\n      setBools = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      oldText = _useState6[0],\n      setOldText = _useState6[1];\n\n  var _useState7 = useState(['', '', '', '', '', '']),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newoldtext = _useState8[0],\n      setNewOldText = _useState8[1];\n\n  var _useState9 = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      texts = _useState10[0],\n      setTexts = _useState10[1];\n\n  var _useState11 = useState([correct[1], \"_\", \"_\", \"_\", \"_\", \"_\"]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      actors = _useState12[0],\n      setActors = _useState12[1];\n\n  var _useState13 = useState([\"\", \"\", \"\", \"\", \"\", \"\"]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      guessTexts = _useState14[0],\n      setGuessTexts = _useState14[1];\n\n  var _useState15 = useState([styles.input, styles.input, styles.input, styles.input, styles.input, styles.input]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      guessStyles = _useState16[0],\n      setGuessStyles = _useState16[1];\n\n  var _useState17 = useState([\"\", \"\", \"\"]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      hoverTexts = _useState18[0],\n      setHoverTexts = _useState18[1];\n\n  var inputRefs = [useRef(null), useRef(null), useRef(null), useRef(null), useRef(null), useRef(null)];\n\n  function textHandler(text, column) {\n    var newData = [];\n\n    for (var i = 0; i < holdoverdata.length; i += 1) {\n      if (holdoverdata[i].includes(text.toLowerCase())) {\n        newData.push(holdoverdata[i]);\n      }\n    }\n\n    setOldText(text);\n    holdoverdata = newData;\n    peekTexts = texts;\n    peekHoverTexts = hoverTexts;\n\n    if (text.length < newoldtext[column].length) {\n      for (var _i = column * 3; _i < Math.min((column + 1) * 3, column * 3 + newData.length); _i += 1) {\n        peekTexts[_i] = \"\";\n        peekHoverTexts[_i % 3] = \"\";\n      }\n\n      holdoverdata = filmmockdata;\n    } else {\n      for (var _i2 = column * 3; _i2 < (column + 1) * 3; _i2 += 1) {\n        if (_i2 < column * 3 + newData.length) {\n          peekTexts[_i2] = Data[newData[_i2 - column * 3]][0];\n          peekHoverTexts[_i2 % 3] = Data[newData[_i2 - column * 3]][0];\n        } else {\n          peekTexts[_i2] = \"\";\n          peekHoverTexts[_i2 % 3] = 0;\n        }\n      }\n    }\n\n    setTexts(peekTexts);\n    peekOldTexts = newoldtext;\n    newoldtext[column] = text;\n    setNewOldText(peekOldTexts);\n  }\n\n  function guess(box) {\n    var section = Math.floor(box / 3);\n    peekGuessTexts = guessTexts;\n    peekGuessTexts[section] = texts[box];\n    setGuessTexts(peekGuessTexts);\n\n    if (texts[box] === correct[0]) {\n      peekGuessStyles = guessStyles;\n      peekGuessStyles[section] = styles.green;\n      setGuessStyles(peekGuessStyles);\n      peekBools = bools;\n\n      for (var i = 0; i < peekBools.length; i += 1) {\n        peekBools[i] = false;\n      }\n\n      setBools(peekBools);\n      textHandler(\"\", section);\n      var peekactors = actors;\n\n      while (section < correct.length - 1) {\n        peekactors[section + 1] = correct[section + 2];\n        section += 1;\n      }\n\n      setActors(peekactors);\n      return;\n    } else {\n      var wordsGuess = new Set(texts[box].split(\" \"));\n      peekGuessStyles = guessStyles;\n      peekGuessStyles[section] = styles.gray;\n      setGuessStyles(peekGuessStyles);\n\n      for (var _iterator = _createForOfIteratorHelperLoose(new Set(correct[0].split(\" \"))), _step; !(_step = _iterator()).done;) {\n        var item = _step.value;\n\n        if (!PointlessWords.has(item) && wordsGuess.has(item)) {\n          peekGuessStyles = guessStyles;\n          peekGuessStyles[section] = styles.yellow;\n          setGuessStyles(peekGuessStyles);\n          break;\n        }\n      }\n    }\n\n    peekBools = bools;\n    peekBools[section] = false;\n\n    if (box < 15) {\n      peekBools[section + 1] = true;\n      var _peekactors = actors;\n      _peekactors[section + 1] = correct[section + 2];\n      setActors(_peekactors);\n      console.log(actors);\n    }\n\n    setBools(peekBools);\n    textHandler(\"\", section);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"navbar?\"), React.createElement(TouchableOpacity, {\n    style: [styles.hover],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, hoverTexts[0]), React.createElement(TouchableOpacity, {\n    style: [styles.hover, styles.bigtest],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, hoverTexts[1]), React.createElement(TouchableOpacity, {\n    style: [styles.hover, styles.bigtest],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, hoverTexts[2]), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.spot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.actor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, actors[0]), React.createElement(TextInput, {\n    ref: inputRefs[0],\n    style: bools[0] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.input, bools[0] ? styles.none : guessStyles[0]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, guessTexts[0])), React.createElement(TouchableOpacity, {\n    style: [styles.hover, texts[0].length > 0 ? null : styles.none, styles.firstSug],\n    onPress: function onPress() {\n      return guess(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, texts[0])), React.createElement(TouchableOpacity, {\n    style: [styles.hover, texts[1].length > 0 ? null : styles.none, styles.secondSug],\n    onPress: function onPress() {\n      return guess(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, texts[1])), React.createElement(TouchableOpacity, {\n    style: [styles.hover, texts[2].length > 0 ? null : styles.none, styles.thirdSug],\n    onPress: function onPress() {\n      return guess(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, texts[2]))), React.createElement(View, {\n    style: styles.spot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: actors[1].length > 1 ? styles.actor : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, actors[1]), React.createElement(TextInput, {\n    ref: inputRefs[1],\n    style: bools[1] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.input, bools[1] ? styles.none : guessStyles[1]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, guessTexts[1])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, texts[3])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, texts[4])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, texts[5]))), React.createElement(View, {\n    style: styles.spot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: actors[2].length > 1 ? styles.actor : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, actors[2]), React.createElement(TextInput, {\n    style: bools[2] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.input, bools[2] ? styles.none : guessStyles[2]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, guessTexts[2])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(6);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, texts[6])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(7);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, texts[7])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(8);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, texts[8]))), React.createElement(View, {\n    style: styles.spot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: actors[3].length > 1 ? styles.actor : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, actors[3]), React.createElement(TextInput, {\n    style: bools[3] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.input, bools[3] ? styles.none : guessStyles[3]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, guessTexts[3])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(9);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, texts[9])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, texts[10])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(11);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, texts[11]))), React.createElement(View, {\n    style: styles.spot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: actors[4].length > 1 ? styles.actor : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, actors[4]), React.createElement(TextInput, {\n    style: bools[4] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.input, bools[4] ? styles.none : guessStyles[4]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, guessTexts[4])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(12);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, texts[12])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(13);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, texts[13])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(14);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, texts[14]))), React.createElement(View, {\n    style: styles.spot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: actors[5].length > 1 ? styles.actor : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, actors[5]), React.createElement(TextInput, {\n    style: bools[5] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [styles.input, bools[5] ? styles.none : guessStyles[5]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, guessTexts[5])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(15);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, texts[15])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(16);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, texts[16])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(17);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, texts[17])))));\n}\nvar styles = StyleSheet.create({\n  text: {\n    margin: 5\n  },\n  container: {\n    alignContent: 'center',\n    marginVertical: \"2%\",\n    marginHorizontal: \"40%\",\n    height: \"150%\"\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    height: 30,\n    zIndex: -1\n  },\n  none: {\n    display: 'none'\n  },\n  black: {\n    backgroundColor: \"black\",\n    height: 30\n  },\n  hover: {\n    overflow: \"hidden\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"5%\",\n    borderWidth: 1,\n    borderColor: \"black\"\n  },\n  yellow: {\n    backgroundColor: \"yellow\"\n  },\n  green: {\n    backgroundColor: \"green\"\n  },\n  gray: {\n    backgroundColor: \"gray\"\n  },\n  spot: {\n    marginVertical: \"1%\",\n    height: \"14%\",\n    overflow: \"hidden\",\n    position: \"relative\"\n  },\n  actor: {\n    height: \"100%\",\n    fontSize: \"20%\",\n    overflow: 'hidden',\n    fontStyle: 'italic',\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderBottomWidth: 0\n  },\n  topTest: {},\n  firstSug: {\n    top: \"55%\"\n  },\n  secondSug: {\n    top: \"75%\"\n  },\n  thirdSug: {\n    top: \"95%\"\n  },\n  bigtest: {\n    top: \"40%\",\n    backgroundColor: \"gray\",\n    zIndex: 7\n  }\n});","map":{"version":3,"sources":["C:/Users/blarg/Documents/stardle/Puzzle.tsx"],"names":["React","useState","useRef","Data","PointlessWords","console","log","Object","keys","filmmockdata","Puzzle","holdoverdata","peekTexts","peekOldTexts","peekGuessStyles","peekBools","peekGuessTexts","peekHoverTexts","Math","floor","random","length","correct","bools","setBools","oldText","setOldText","newoldtext","setNewOldText","texts","setTexts","actors","setActors","guessTexts","setGuessTexts","styles","input","guessStyles","setGuessStyles","hoverTexts","setHoverTexts","inputRefs","textHandler","text","column","newData","i","includes","toLowerCase","push","min","guess","box","section","green","peekactors","wordsGuess","Set","split","gray","item","has","yellow","hover","bigtest","container","spot","actor","none","e","target","value","firstSug","secondSug","thirdSug","black","StyleSheet","create","margin","alignContent","marginVertical","marginHorizontal","height","borderWidth","borderColor","zIndex","display","backgroundColor","overflow","position","width","fontSize","fontStyle","borderBottomWidth","topTest","top"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n//import { View, TextInput, TouchableOpacity, Text } from \"./components/Themed\"\r\nimport { StyleSheet, View, TouchableOpacity, Text, TextInput, Platform } from 'react-native'\r\nimport Data from \"./constants/Data\"\r\nimport PointlessWords from './constants/PointlessWords'\r\n\r\nconsole.log(Object.keys(Data))\r\n\r\nconst filmmockdata : Array<string> = Object.keys(Data)\r\n\r\nexport default function Puzzle () {\r\n\r\n    let holdoverdata = filmmockdata;\r\n    let peekTexts;\r\n    let peekOldTexts;\r\n    let peekGuessStyles;\r\n    let peekBools;\r\n    let peekGuessTexts;\r\n    let peekHoverTexts;\r\n\r\n    const [correct] = useState(Data[filmmockdata[Math.floor(Math.random() * filmmockdata.length)]]);\r\n    console.log(correct)\r\n    \r\n    const [bools, setBools] = useState([true, false, false, false, false, false])\r\n\r\n    const [oldText, setOldText] = useState('')\r\n    const [newoldtext, setNewOldText] = useState(['','','','','',''])\r\n    const [texts, setTexts] = useState([\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\"])\r\n    const [actors, setActors] = useState([correct[1],\"_\",\"_\",\"_\",\"_\",\"_\"])\r\n    const [guessTexts, setGuessTexts] = useState([\"\",\"\",\"\",\"\",\"\",\"\"])\r\n    const [guessStyles, setGuessStyles] = useState([styles.input, styles.input, styles.input, styles.input, styles.input, styles.input])\r\n    const [hoverTexts, setHoverTexts] = useState([\"\",\"\",\"\"])\r\n\r\n    const inputRefs = [useRef(null), useRef(null), useRef(null), useRef(null), useRef(null), useRef(null)]\r\n\r\n    function textHandler(text: string, column: number){\r\n        let newData = [];\r\n        for (let i = 0; i < holdoverdata.length; i += 1){\r\n            if (holdoverdata[i].includes(text.toLowerCase())){\r\n                newData.push(holdoverdata[i]);\r\n            }\r\n        }\r\n        \r\n        // if this isn't here the text updates don't work. i have no idea why this is.\r\n        setOldText(text);\r\n\r\n        holdoverdata = newData;\r\n        //console.log(holdoverdata);\r\n        peekTexts = texts;\r\n        peekHoverTexts = hoverTexts;\r\n        if (text.length < newoldtext[column].length){\r\n            for (let i = (column * 3); i < Math.min((column + 1) * 3, (column * 3) + newData.length); i += 1){\r\n                peekTexts[i] = \"\";\r\n                peekHoverTexts[i % 3] = \"\";\r\n            }\r\n            holdoverdata = filmmockdata;\r\n        }\r\n        else{\r\n            for (let i = (column * 3); i < (column + 1) * 3; i += 1){\r\n                if (i < (column * 3) + newData.length){\r\n                    peekTexts[i] = Data[newData[i - (column * 3)]][0];\r\n                    peekHoverTexts[i % 3] = Data[newData[i - (column * 3)]][0];\r\n                }\r\n                else{\r\n                    peekTexts[i] = \"\";\r\n                    peekHoverTexts[i % 3] = 0;\r\n                }\r\n            }\r\n        }\r\n        setTexts(peekTexts);\r\n\r\n        peekOldTexts = newoldtext;\r\n        newoldtext[column] = text;\r\n        setNewOldText(peekOldTexts);\r\n        // now we need to know where we are in the chain of command so we can render 3 suggestion boxes under.\r\n    }\r\n\r\n    function guess(box: number){\r\n        let section = Math.floor(box / 3);\r\n        peekGuessTexts = guessTexts;\r\n        peekGuessTexts[section] = texts[box];\r\n        setGuessTexts(peekGuessTexts);\r\n        //setBooltest(false);\r\n        if (texts[box] === correct[0]){\r\n            //console.log(\"winner!\");\r\n            peekGuessStyles = guessStyles;\r\n            peekGuessStyles[section] = styles.green;\r\n            setGuessStyles(peekGuessStyles);\r\n            peekBools = bools;\r\n            for (let i = 0; i < peekBools.length; i += 1){\r\n                peekBools[i] = false;\r\n            }\r\n            setBools(peekBools);\r\n            textHandler(\"\", section)\r\n            let peekactors = actors;\r\n            while (section < correct.length - 1){\r\n                peekactors[section + 1] = correct[section + 2];\r\n                section += 1;\r\n            }\r\n            setActors(peekactors);\r\n            //console.log(actors);\r\n            return;\r\n        }\r\n        else{\r\n            let wordsGuess = new Set(texts[box].split(\" \"));\r\n            peekGuessStyles = guessStyles;\r\n            peekGuessStyles[section] = styles.gray;\r\n            setGuessStyles(peekGuessStyles);\r\n            for (let item of new Set(correct[0].split(\" \"))){\r\n                if (!PointlessWords.has(item) && wordsGuess.has(item)){\r\n                    //console.log(\"overlap\");\r\n                    peekGuessStyles = guessStyles;\r\n                    peekGuessStyles[section] = styles.yellow;\r\n                    setGuessStyles(peekGuessStyles);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        peekBools = bools;\r\n        peekBools[section] = false;\r\n        if (box < 15){\r\n            peekBools[section + 1] = true;\r\n            let peekactors = actors;\r\n            peekactors[section + 1] = correct[section + 2];\r\n            setActors(peekactors);\r\n            console.log(actors);\r\n        }\r\n        setBools(peekBools);\r\n        textHandler(\"\", section);\r\n    }\r\n\r\n    return <View>\r\n        <View>navbar?</View>\r\n        <TouchableOpacity style={[styles.hover]}>{hoverTexts[0]}</TouchableOpacity>\r\n        <TouchableOpacity style={[styles.hover, styles.bigtest]}>{hoverTexts[1]}</TouchableOpacity>\r\n        <TouchableOpacity style={[styles.hover, styles.bigtest]}>{hoverTexts[2]}</TouchableOpacity>\r\n        <View style={styles.container}>\r\n            <View style={styles.spot}>\r\n                <Text style={styles.actor}>{actors[0]}</Text>\r\n                <TextInput \r\n                    ref={inputRefs[0]} style={bools[0] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 0)}}>\r\n                </TextInput>\r\n                <View style={[styles.input, bools[0] ? styles.none : guessStyles[0]]}>\r\n                    <Text>{guessTexts[0]}</Text>\r\n                </View>\r\n                <TouchableOpacity style={[styles.hover, texts[0].length > 0 ? null : styles.none, styles.firstSug]} onPress={() => guess(0)}>\r\n                    <Text>{texts[0]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={[styles.hover, texts[1].length > 0 ? null : styles.none, styles.secondSug]} onPress={() => guess(1)}>\r\n                    <Text>{texts[1]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={[styles.hover, texts[2].length > 0 ? null : styles.none, styles.thirdSug]} onPress={() => guess(2)}>\r\n                    <Text>{texts[2]}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.spot}>\r\n                <Text style={actors[1].length > 1 ? styles.actor : styles.black}>{actors[1]}</Text>\r\n                <TextInput \r\n                    ref={inputRefs[1]} style={bools[1] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 1)}}>\r\n                </TextInput>\r\n                <View style={[styles.input, bools[1] ? styles.none : guessStyles[1]]}>\r\n                    <Text>{guessTexts[1]}</Text>\r\n                </View>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(3)}>\r\n                    <Text>{texts[3]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(4)}>\r\n                    <Text>{texts[4]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(5)}>\r\n                    <Text>{texts[5]}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.spot}>\r\n                <Text style={actors[2].length > 1 ? styles.actor : styles.black}>{actors[2]}</Text>\r\n                <TextInput style={bools[2] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 2)}}></TextInput>\r\n                <View style={[styles.input, bools[2] ? styles.none : guessStyles[2]]}>\r\n                    <Text>{guessTexts[2]}</Text>\r\n                </View>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(6)}>\r\n                    <Text>{texts[6]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(7)}>\r\n                    <Text>{texts[7]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(8)}>\r\n                    <Text>{texts[8]}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.spot}>\r\n                <Text style={actors[3].length > 1 ? styles.actor : styles.black}>{actors[3]}</Text>\r\n                <TextInput style={bools[3] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 3)}}></TextInput>\r\n                <View style={[styles.input, bools[3] ? styles.none : guessStyles[3]]}>\r\n                    <Text>{guessTexts[3]}</Text>\r\n                </View>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(9)}>\r\n                    <Text>{texts[9]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(10)}>\r\n                    <Text>{texts[10]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(11)}>\r\n                    <Text>{texts[11]}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.spot}>\r\n                <Text style={actors[4].length > 1 ? styles.actor : styles.black}>{actors[4]}</Text>\r\n                <TextInput style={bools[4] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 4)}}></TextInput>\r\n                <View style={[styles.input, bools[4] ? styles.none : guessStyles[4]]}>\r\n                    <Text>{guessTexts[4]}</Text>\r\n                </View>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(12)}>\r\n                    <Text>{texts[12]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(13)}>\r\n                    <Text>{texts[13]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(14)}>\r\n                    <Text>{texts[14]}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.spot}>\r\n                <Text style={actors[5].length > 1 ? styles.actor : styles.black}>{actors[5]}</Text>\r\n                <TextInput style={bools[5] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 5)}}></TextInput>\r\n                <View style={[styles.input, bools[5] ? styles.none : guessStyles[5]]}>\r\n                    <Text>{guessTexts[5]}</Text>\r\n                </View>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(15)}>\r\n                    <Text>{texts[15]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(16)}>\r\n                    <Text>{texts[16]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.hover} onPress={() => guess(17)}>\r\n                    <Text>{texts[17]}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        margin: 5,\r\n    },\r\n    container: {\r\n        alignContent: 'center',\r\n        marginVertical: \"2%\",\r\n        marginHorizontal: \"40%\",\r\n        height: \"150%\",\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        height: 30,\r\n        zIndex: -1\r\n    },\r\n    none: {\r\n        display: 'none'\r\n    },\r\n    black: {\r\n        backgroundColor: \"black\",\r\n        height: 30\r\n    },\r\n    hover: {\r\n        overflow: \"hidden\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"5%\",\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n    },\r\n    yellow: {\r\n        backgroundColor: \"yellow\",\r\n    },\r\n    green: {\r\n        backgroundColor: \"green\",\r\n    },\r\n    gray: {\r\n        backgroundColor: \"gray\",\r\n    },\r\n    spot: {\r\n        marginVertical: \"1%\",\r\n        height: \"14%\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\"\r\n    },\r\n    actor: {\r\n        height: \"100%\",\r\n        fontSize: \"20%\",\r\n        overflow: 'hidden',\r\n        fontStyle: 'italic',\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        borderBottomWidth: 0\r\n    },\r\n    topTest: {\r\n        \r\n    },\r\n    firstSug: {\r\n        top: \"55%\"\r\n    },\r\n    secondSug: {\r\n        top: \"75%\"\r\n    },\r\n    thirdSug: {\r\n        top: \"95%\"\r\n    },\r\n    bigtest: {\r\n        top: \"40%\",\r\n        backgroundColor: \"gray\",\r\n        zIndex: 7\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}