{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\blarg\\\\Documents\\\\stardle\\\\Puzzle.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useRef } from 'react';\nimport { View, TextInput, TouchableOpacity, Text } from \"./components/Themed\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DefaultInput from \"react-native-web/dist/exports/TextInput\";\nimport Data from \"./constants/Data\";\nimport PointlessWords from \"./constants/PointlessWords\";\nconsole.log(Object.keys(Data));\nvar filmmockdata = Object.keys(Data);\nexport default function Puzzle() {\n  var holdoverdata = filmmockdata;\n  var peektexts;\n  var peekoldtexts;\n  var peekguessstyles;\n  var peekbools;\n  var correct = Data[filmmockdata[1]];\n  console.log(correct);\n\n  var _useState = useState([true, true, true, true, true, true]),\n      _useState2 = _slicedToArray(_useState, 2),\n      bools = _useState2[0],\n      setBools = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldText = _useState4[0],\n      setOldText = _useState4[1];\n\n  var _useState5 = useState(['', '', '', '', '', '']),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newoldtext = _useState6[0],\n      setnewoldtext = _useState6[1];\n\n  var _useState7 = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      texts = _useState8[0],\n      setTexts = _useState8[1];\n\n  var _useState9 = useState([correct[1], \"_\", \"_\", \"_\", \"_\", \"_\"]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      actors = _useState10[0],\n      setActors = _useState10[1];\n\n  var _useState11 = useState([\"\", \"\", \"\", \"\", \"\", \"\"]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      guessTexts = _useState12[0],\n      setGuessTexts = _useState12[1];\n\n  var _useState13 = useState([styles.input, styles.input, styles.input, styles.input, styles.input, styles.input]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      guessStyles = _useState14[0],\n      setGuessStyles = _useState14[1];\n\n  var inputRefs = [useRef(null), useRef(null), useRef(null), useRef(null), useRef(null), useRef(null)];\n\n  function textHandler(text, column) {\n    var newData = [];\n\n    for (var i = 0; i < holdoverdata.length; i += 1) {\n      if (holdoverdata[i].includes(text.toLowerCase())) {\n        newData.push(holdoverdata[i]);\n      }\n    }\n\n    setOldText(text);\n    holdoverdata = newData;\n\n    if (text.length < newoldtext[column].length) {\n      peektexts = texts;\n\n      for (var _i = column * 3; _i < Math.min((column + 1) * 3, column * 3 + newData.length); _i += 1) {\n        peektexts[_i] = \"\";\n      }\n\n      setTexts(peektexts);\n      holdoverdata = filmmockdata;\n    } else {\n      peektexts = texts;\n\n      for (var _i2 = column * 3; _i2 < Math.min((column + 1) * 3, column * 3 + newData.length); _i2 += 1) {\n        peektexts[_i2] = Data[newData[_i2 - column * 3]][0];\n      }\n\n      setTexts(peektexts);\n    }\n\n    peekoldtexts = newoldtext;\n    newoldtext[column] = text;\n    setnewoldtext(peekoldtexts);\n  }\n\n  function guess(box) {\n    var section = Math.floor(box / 3);\n    var peekguesstexts = guessTexts;\n    peekguesstexts[section] = texts[box];\n    setGuessTexts(peekguesstexts);\n\n    if (texts[box] === correct[0]) {\n      peekguessstyles = guessStyles;\n      peekguessstyles[section] = styles.green;\n      setGuessStyles(peekguessstyles);\n      peekbools = bools;\n\n      for (var i = 0; i < peekbools.length; i += 1) {\n        peekbools[i] = false;\n      }\n\n      setBools(peekbools);\n      textHandler(\"\", section);\n      return;\n    } else {\n      var wordsGuess = new Set(texts[box].split(\" \"));\n      peekguessstyles = guessStyles;\n      peekguessstyles[section] = styles.gray;\n      setGuessStyles(peekguessstyles);\n\n      for (var _iterator = _createForOfIteratorHelperLoose(new Set(correct[0].split(\" \"))), _step; !(_step = _iterator()).done;) {\n        var item = _step.value;\n\n        if (!PointlessWords.has(item) && wordsGuess.has(item)) {\n          peekguessstyles = guessStyles;\n          peekguessstyles[section] = styles.yellow;\n          setGuessStyles(peekguessstyles);\n          break;\n        }\n      }\n    }\n\n    peekbools = bools;\n    peekbools[section] = false;\n    setBools(peekbools);\n\n    if (box < 15) {\n      var peekactors = actors;\n      peekactors[section + 1] = correct[section + 2];\n      setActors(peekactors);\n      console.log(actors);\n    }\n\n    textHandler(\"\", section);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, actors[0]), React.createElement(DefaultInput, {\n    ref: inputRefs[0],\n    style: bools[0] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[0] ? styles.none : guessStyles[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, guessTexts[0])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, texts[0])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, texts[1])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, texts[2])), React.createElement(Text, {\n    style: actors[1].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, actors[1]), React.createElement(DefaultInput, {\n    ref: inputRefs[1],\n    style: bools[1] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[1] ? styles.none : guessStyles[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, guessTexts[1])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, texts[3])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, texts[4])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, texts[5])), React.createElement(Text, {\n    style: actors[2].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, actors[2]), React.createElement(TextInput, {\n    style: bools[2] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[2] ? styles.none : guessStyles[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, guessTexts[2])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(6);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, texts[6])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(7);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, texts[7])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(8);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, texts[8])), React.createElement(Text, {\n    style: actors[3].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, actors[3]), React.createElement(TextInput, {\n    style: bools[3] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[3] ? styles.none : guessStyles[3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, guessTexts[3])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(9);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, texts[9])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, texts[10])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(11);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, texts[11])), React.createElement(Text, {\n    style: actors[4].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, actors[4]), React.createElement(TextInput, {\n    style: bools[4] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[4] ? styles.none : guessStyles[4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, guessTexts[4])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(12);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, texts[12])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(13);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, texts[13])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(14);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, texts[14])), React.createElement(Text, {\n    style: actors[5].length > 1 ? null : styles.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, actors[5]), React.createElement(TextInput, {\n    style: bools[5] ? styles.input : styles.none,\n    onChange: function onChange(e) {\n      textHandler(e.target.value, 5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: bools[5] ? styles.none : guessStyles[5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, guessTexts[5])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(15);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, texts[15])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(16);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, texts[16])), React.createElement(TouchableOpacity, {\n    style: styles.hover,\n    onPress: function onPress() {\n      return guess(17);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, texts[17])));\n}\nvar styles = StyleSheet.create({\n  text: {\n    margin: 5\n  },\n  container: {\n    alignContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"black\"\n  },\n  none: {\n    display: 'none'\n  },\n  black: {\n    backgroundColor: \"black\"\n  },\n  hover: {\n    overflow: 'hidden'\n  },\n  yellow: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    backgroundColor: \"yellow\"\n  },\n  green: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    backgroundColor: \"green\"\n  },\n  gray: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    backgroundColor: \"gray\"\n  }\n});","map":{"version":3,"sources":["C:/Users/blarg/Documents/stardle/Puzzle.tsx"],"names":["React","useState","useRef","View","TextInput","TouchableOpacity","Text","Data","PointlessWords","console","log","Object","keys","filmmockdata","Puzzle","holdoverdata","peektexts","peekoldtexts","peekguessstyles","peekbools","correct","bools","setBools","oldText","setOldText","newoldtext","setnewoldtext","texts","setTexts","actors","setActors","guessTexts","setGuessTexts","styles","input","guessStyles","setGuessStyles","inputRefs","textHandler","text","column","newData","i","length","includes","toLowerCase","push","Math","min","guess","box","section","floor","peekguesstexts","green","wordsGuess","Set","split","gray","item","has","yellow","peekactors","none","e","target","value","hover","black","StyleSheet","create","margin","container","alignContent","borderWidth","borderColor","display","backgroundColor","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { View, TextInput, TouchableOpacity, Text } from \"./components/Themed\"\r\nimport { StyleSheet, TextInput as DefaultInput } from 'react-native'\r\nimport Data from \"./constants/Data\"\r\nimport PointlessWords from './constants/PointlessWords'\r\n\r\nconsole.log(Object.keys(Data))\r\n\r\nconst filmmockdata : Array<string> = Object.keys(Data)\r\n\r\nexport default function Puzzle () {\r\n\r\n    let holdoverdata = filmmockdata;\r\n    let peektexts;\r\n    let peekoldtexts;\r\n    let peekguessstyles;\r\n    let peekbools;\r\n\r\n    let correct = Data[filmmockdata[1]];\r\n    console.log(correct)\r\n    \r\n    const [bools, setBools] = useState([true, true, true, true, true, true])\r\n\r\n    const [oldText, setOldText] = useState('')\r\n    const [newoldtext, setnewoldtext] = useState(['','','','','',''])\r\n    const [texts, setTexts] = useState([\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\",\r\n        \"\",\"\",\"\"])\r\n    const [actors, setActors] = useState([correct[1],\"_\",\"_\",\"_\",\"_\",\"_\"])\r\n    const [guessTexts, setGuessTexts] = useState([\"\",\"\",\"\",\"\",\"\",\"\"])\r\n    const [guessStyles, setGuessStyles] = useState([styles.input, styles.input, styles.input, styles.input, styles.input, styles.input])\r\n\r\n    const inputRefs = [useRef(null), useRef(null), useRef(null), useRef(null), useRef(null), useRef(null)]\r\n\r\n    function textHandler(text: string, column: number){\r\n        let newData = [];\r\n        for (let i = 0; i < holdoverdata.length; i += 1){\r\n            if (holdoverdata[i].includes(text.toLowerCase())){\r\n                newData.push(holdoverdata[i]);\r\n            }\r\n        }\r\n        \r\n        // if this isn't here the text updates don't work. i have no idea why this is.\r\n        setOldText(text);\r\n\r\n        holdoverdata = newData;\r\n        //console.log(holdoverdata);\r\n        if (text.length < newoldtext[column].length){\r\n            peektexts = texts;\r\n            for (let i = (column * 3); i < Math.min((column + 1) * 3, (column * 3) + newData.length); i += 1){\r\n                peektexts[i] = \"\";\r\n            }\r\n            setTexts(peektexts);\r\n            holdoverdata = filmmockdata;\r\n        }\r\n        else{\r\n            peektexts = texts;\r\n            for (let i = (column * 3); i < Math.min((column + 1) * 3, (column * 3) + newData.length); i += 1){\r\n                peektexts[i] = Data[newData[i - (column * 3)]][0];\r\n            }\r\n            setTexts(peektexts);\r\n        }\r\n\r\n        peekoldtexts = newoldtext;\r\n        newoldtext[column] = text;\r\n        setnewoldtext(peekoldtexts);\r\n        // now we need to know where we are in the chain of command so we can render 3 suggestion boxes under.\r\n    }\r\n\r\n    function guess(box: number){\r\n        let section = Math.floor(box / 3);\r\n        let peekguesstexts = guessTexts;\r\n        peekguesstexts[section] = texts[box];\r\n        setGuessTexts(peekguesstexts);\r\n        //setBooltest(false);\r\n        if (texts[box] === correct[0]){\r\n            //console.log(\"winner!\");\r\n            peekguessstyles = guessStyles;\r\n            peekguessstyles[section] = styles.green;\r\n            setGuessStyles(peekguessstyles);\r\n            peekbools = bools;\r\n            for (let i = 0; i < peekbools.length; i += 1){\r\n                peekbools[i] = false;\r\n            }\r\n            setBools(peekbools);\r\n            textHandler(\"\", section)\r\n            return;\r\n        }\r\n        else{\r\n            let wordsGuess = new Set(texts[box].split(\" \"));\r\n            peekguessstyles = guessStyles;\r\n            peekguessstyles[section] = styles.gray;\r\n            setGuessStyles(peekguessstyles);\r\n            for (let item of new Set(correct[0].split(\" \"))){\r\n                if (!PointlessWords.has(item) && wordsGuess.has(item)){\r\n                    //console.log(\"overlap\");\r\n                    peekguessstyles = guessStyles;\r\n                    peekguessstyles[section] = styles.yellow;\r\n                    setGuessStyles(peekguessstyles);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        peekbools = bools;\r\n        peekbools[section] = false;\r\n        setBools(peekbools);\r\n        if (box < 15){\r\n            let peekactors = actors;\r\n            peekactors[section + 1] = correct[section + 2];\r\n            setActors(peekactors);\r\n            console.log(actors);\r\n        }\r\n        textHandler(\"\", section);\r\n    }\r\n\r\n    return <View>\r\n        <Text>{actors[0]}</Text>\r\n        <DefaultInput \r\n            ref={inputRefs[0]} style={bools[0] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 0)}}>\r\n        </DefaultInput>\r\n        <View style={bools[0] ? styles.none : guessStyles[0]}>\r\n            <Text>{guessTexts[0]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(0)}>\r\n            <Text>{texts[0]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(1)}>\r\n            <Text>{texts[1]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(2)}>\r\n            <Text>{texts[2]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[1].length > 1 ? null : styles.black}>{actors[1]}</Text>\r\n        <DefaultInput \r\n            ref={inputRefs[1]} style={bools[1] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 1)}}>\r\n        </DefaultInput>\r\n        <View style={bools[1] ? styles.none : guessStyles[1]}>\r\n            <Text>{guessTexts[1]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(3)}>\r\n            <Text>{texts[3]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(4)}>\r\n            <Text>{texts[4]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(5)}>\r\n            <Text>{texts[5]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[2].length > 1 ? null : styles.black}>{actors[2]}</Text>\r\n        <TextInput style={bools[2] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 2)}}></TextInput>\r\n        <View style={bools[2] ? styles.none : guessStyles[2]}>\r\n            <Text>{guessTexts[2]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(6)}>\r\n            <Text>{texts[6]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(7)}>\r\n            <Text>{texts[7]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(8)}>\r\n            <Text>{texts[8]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[3].length > 1 ? null : styles.black}>{actors[3]}</Text>\r\n        <TextInput style={bools[3] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 3)}}></TextInput>\r\n        <View style={bools[3] ? styles.none : guessStyles[3]}>\r\n            <Text>{guessTexts[3]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(9)}>\r\n            <Text>{texts[9]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(10)}>\r\n            <Text>{texts[10]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(11)}>\r\n            <Text>{texts[11]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[4].length > 1 ? null : styles.black}>{actors[4]}</Text>\r\n        <TextInput style={bools[4] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 4)}}></TextInput>\r\n        <View style={bools[4] ? styles.none : guessStyles[4]}>\r\n            <Text>{guessTexts[4]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(12)}>\r\n            <Text>{texts[12]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(13)}>\r\n            <Text>{texts[13]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(14)}>\r\n            <Text>{texts[14]}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={actors[5].length > 1 ? null : styles.black}>{actors[5]}</Text>\r\n        <TextInput style={bools[5] ? styles.input : styles.none} onChange={(e) => {textHandler(e.target.value, 5)}}></TextInput>\r\n        <View style={bools[5] ? styles.none : guessStyles[5]}>\r\n            <Text>{guessTexts[5]}</Text>\r\n        </View>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(15)}>\r\n            <Text>{texts[15]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(16)}>\r\n            <Text>{texts[16]}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.hover} onPress={() => guess(17)}>\r\n            <Text>{texts[17]}</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        margin: 5,\r\n    },\r\n    container: {\r\n        alignContent: 'center'\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\"\r\n    },\r\n    none: {\r\n        display: 'none'\r\n    },\r\n    black: {\r\n        backgroundColor: \"black\"\r\n    },\r\n    hover: {\r\n        overflow: 'hidden'\r\n    },\r\n    yellow: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        backgroundColor: \"yellow\",\r\n    },\r\n    green: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        backgroundColor: \"green\",\r\n    },\r\n    gray: {\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        backgroundColor: \"gray\",\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}